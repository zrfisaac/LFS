.\" Copyright (c) 2005 Michael Kerrisk
.\" based on earlier work by faith@cs.unc.edu and
.\" Mike Battersby <mib@deakin.edu.au>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" 2005-09-15, mtk, Created new page by splitting off from sigaction.2
.\"
.TH sigpending 2 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
sigpending, rt_sigpending \- examine pending signals
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <signal.h>
.P
.BI "int sigpending(sigset_t *" set );
.fi
.P
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR sigpending ():
.nf
    _POSIX_C_SOURCE
.fi
.SH DESCRIPTION
.BR sigpending ()
returns the set of signals that are pending for delivery to the calling
thread (i.e., the signals which have been raised while blocked).
The mask of pending signals is returned in
.IR set .
.SH RETURN VALUE
.BR sigpending ()
returns 0 on success.
On failure, \-1 is returned and
.I errno
is set to indicate the error.
.SH ERRORS
.TP
.B EFAULT
.I set
points to memory which is not a valid part of the process address space.
.SH STANDARDS
POSIX.1-2008.
.SH HISTORY
POSIX.1-2001.
.SS C library/kernel differences
The original Linux system call was named
.BR sigpending ().
However, with the addition of real-time signals in Linux 2.2,
the fixed-size, 32-bit
.I sigset_t
argument supported by that system call was no longer fit for purpose.
Consequently, a new system call,
.BR rt_sigpending (),
was added to support an enlarged
.I sigset_t
type.
The new system call takes a second argument,
.IR "size_t sigsetsize" ,
which specifies the size in bytes of the signal set in
.IR set .
.\" This argument is currently required to be less than or equal to
.\" .IR sizeof(sigset_t)
.\" (or the error
.\" .B EINVAL
.\" results).
The glibc
.BR sigpending ()
wrapper function hides these details from us, transparently calling
.BR rt_sigpending ()
when the kernel provides it.
.SH NOTES
See
.BR sigsetops (3)
for details on manipulating signal sets.
.P
If a signal is both blocked and has a disposition of "ignored", it is
.I not
added to the mask of pending signals when generated.
.P
The set of signals that is pending for a thread
is the union of the set of signals that is pending for that thread
and the set of signals that is pending for the process as a whole; see
.BR signal (7).
.P
A child created via
.BR fork (2)
initially has an empty pending signal set;
the pending signal set is preserved across an
.BR execve (2).
.SH BUGS
Up to and including glibc 2.2.1,
there is a bug in the wrapper function for
.BR sigpending ()
which means that information about pending real-time signals
is not correctly returned.
.SH SEE ALSO
.BR kill (2),
.BR sigaction (2),
.BR signal (2),
.BR sigprocmask (2),
.BR sigsuspend (2),
.BR sigsetops (3),
.BR signal (7)
