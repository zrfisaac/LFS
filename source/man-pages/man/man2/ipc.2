.\" Copyright (c) 1995 Michael Chastain (mec@shell.portal.com), 15 April 1995.
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" Modified Tue Oct 22 08:11:14 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.TH ipc 2 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
ipc \- System V IPC system calls
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.BR "#include <linux/ipc.h>" "        /* Definition of needed constants */"
.BR "#include <sys/syscall.h>" "      /* Definition of " SYS_* " constants */"
.B #include <unistd.h>
.P
.BI "int syscall(SYS_ipc, unsigned int " call ", int " first ,
.BI "            unsigned long " second ", unsigned long " third \
", void *" ptr ,
.BI "            long " fifth );
.fi
.P
.IR Note :
glibc provides no wrapper for
.BR ipc (),
necessitating the use of
.BR syscall (2).
.SH DESCRIPTION
.BR ipc ()
is a common kernel entry point for the System\ V IPC calls
for messages, semaphores, and shared memory.
.I call
determines which IPC function to invoke;
the other arguments are passed through to the appropriate call.
.P
User-space programs should call the appropriate functions by their usual names.
Only standard library implementors and kernel hackers need to know about
.BR ipc ().
.SH VERSIONS
On some architectures\[em]for example x86-64 and ARM\[em]there is no
.BR ipc ()
system call; instead,
.BR msgctl (2),
.BR semctl (2),
.BR shmctl (2),
and so on really are implemented as separate system calls.
.SH STANDARDS
Linux.
.SH SEE ALSO
.BR msgctl (2),
.BR msgget (2),
.BR msgrcv (2),
.BR msgsnd (2),
.BR semctl (2),
.BR semget (2),
.BR semop (2),
.BR semtimedop (2),
.BR shmat (2),
.BR shmctl (2),
.BR shmdt (2),
.BR shmget (2),
.BR sysvipc (7)
