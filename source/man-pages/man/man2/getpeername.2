.\" Copyright (c) 1983, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" SPDX-License-Identifier: BSD-4-Clause-UC
.\"
.\"     @(#)getpeername.2	6.5 (Berkeley) 3/10/91
.\"
.\" Modified Sat Jul 24 16:37:50 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Thu Jul 30 14:37:50 1993 by Martin Schulze <joey@debian.org>
.\" Modified Sun Mar 28 21:26:46 1999 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 17 Jul 2002, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Added 'socket' to NAME, so that "man -k socket" will show this page.
.\"
.TH getpeername 2 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
getpeername \- get name of connected peer socket
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <sys/socket.h>
.P
.BI "int getpeername(int " sockfd ", struct sockaddr *restrict " addr ,
.BI "                socklen_t *restrict " addrlen );
.fi
.SH DESCRIPTION
.BR getpeername ()
returns the address of the peer connected to the socket
.IR sockfd ,
in the buffer pointed to by
.IR addr .
The
.I addrlen
argument should be initialized to indicate the amount of space pointed to
by
.IR addr .
On return it contains the actual size of the name returned (in bytes).
The name is truncated if the buffer provided is too small.
.P
The returned address is truncated if the buffer provided is too small;
in this case,
.I addrlen
will return a value greater than was supplied to the call.
.SH RETURN VALUE
On success, zero is returned.
On error, \-1 is returned, and
.I errno
is set to indicate the error.
.SH ERRORS
.TP
.B EBADF
The argument
.I sockfd
is not a valid file descriptor.
.TP
.B EFAULT
The
.I addr
argument points to memory not in a valid part of the
process address space.
.TP
.B EINVAL
.I addrlen
is invalid (e.g., is negative).
.TP
.B ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.TP
.B ENOTCONN
The socket is not connected.
.TP
.B ENOTSOCK
The file descriptor
.I sockfd
does not refer to a socket.
.SH STANDARDS
POSIX.1-2008.
.SH HISTORY
POSIX.1-2001, SVr4, 4.4BSD
(first appeared in 4.2BSD).
.SH NOTES
For stream sockets, once a
.BR connect (2)
has been performed, either socket can call
.BR getpeername ()
to obtain the address of the peer socket.
On the other hand, datagram sockets are connectionless.
Calling
.BR connect (2)
on a datagram socket merely sets the peer address for outgoing
datagrams sent with
.BR write (2)
or
.BR recv (2).
The caller of
.BR connect (2)
can use
.BR getpeername ()
to obtain the peer address that it earlier set for the socket.
However, the peer socket is unaware of this information, and calling
.BR getpeername ()
on the peer socket will return no useful information (unless a
.BR connect (2)
call was also executed on the peer).
Note also that the receiver of a datagram can obtain
the address of the sender when using
.BR recvfrom (2).
.SH SEE ALSO
.BR accept (2),
.BR bind (2),
.BR getsockname (2),
.BR ip (7),
.BR socket (7),
.BR unix (7)
