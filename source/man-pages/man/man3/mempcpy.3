'\" t
.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" SPDX-License-Identifier: GPL-1.0-or-later
.\"
.\" Heavily based on glibc infopages, copyright Free Software Foundation
.\"
.\" aeb, 2003, polished a little
.TH mempcpy 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
mempcpy, wmempcpy  \- copy memory area
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.B #include <string.h>
.P
.BI "void *mempcpy(void " dest "[restrict ." n "], const void " src "[restrict ." n ],
.BI "              size_t " n );
.P
.BR "#define _GNU_SOURCE" "         /* See feature_test_macros(7) */"
.B #include <wchar.h>
.P
.BI "wchar_t *wmempcpy(wchar_t " dest "[restrict ." n ],
.BI "              const wchar_t " src "[restrict ." n ],
.BI "              size_t " n );
.fi
.SH DESCRIPTION
The
.BR mempcpy ()
function is nearly identical to the
.BR memcpy (3)
function.
It copies
.I n
bytes from the object beginning at
.I src
into the object pointed to by
.IR dest .
But instead of returning the value of
.I dest
it returns a pointer to the byte following the last written byte.
.P
This function is useful in situations where a number of objects
shall be copied to consecutive memory positions.
.P
The
.BR wmempcpy ()
function is identical but takes
.I wchar_t
type arguments and copies
.I n
wide characters.
.SH RETURN VALUE
.I dest
+
.IR n .
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR mempcpy (),
.BR wmempcpy ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
GNU.
.SH HISTORY
glibc 2.1.
.SH EXAMPLES
.EX
void *
combine(void *o1, size_t s1, void *o2, size_t s2)
{
    void *result = malloc(s1 + s2);
    if (result != NULL)
        mempcpy(mempcpy(result, o1, s1), o2, s2);
    return result;
}
.EE
.SH SEE ALSO
.BR memccpy (3),
.BR memcpy (3),
.BR memmove (3),
.BR wmemcpy (3)
