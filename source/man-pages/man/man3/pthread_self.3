'\" t
.\" Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH pthread_self 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
pthread_self \- obtain ID of the calling thread
.SH LIBRARY
POSIX threads library
.RI ( libpthread ", " \-lpthread )
.SH SYNOPSIS
.nf
.B #include <pthread.h>
.P
.B pthread_t pthread_self(void);
.fi
.SH DESCRIPTION
The
.BR pthread_self ()
function returns the ID of the calling thread.
This is the same value that is returned in
.I *thread
in the
.BR pthread_create (3)
call that created this thread.
.SH RETURN VALUE
This function always succeeds, returning the calling thread's ID.
.SH ERRORS
This function always succeeds.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR pthread_self ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
POSIX.1-2008.
.SH HISTORY
POSIX.1-2001.
.SH NOTES
POSIX.1 allows an implementation wide freedom in choosing
the type used to represent a thread ID;
for example, representation using either an arithmetic type or
a structure is permitted.
Therefore, variables of type
.I pthread_t
can't portably be compared using the C equality operator (\fB==\fP);
use
.BR pthread_equal (3)
instead.
.P
Thread identifiers should be considered opaque:
any attempt to use a thread ID other than in pthreads calls
is nonportable and can lead to unspecified results.
.P
Thread IDs are guaranteed to be unique only within a process.
A thread ID may be reused after a terminated thread has been joined,
or a detached thread has terminated.
.P
The thread ID returned by
.BR pthread_self ()
is not the same thing as the kernel thread ID returned by a call to
.BR gettid (2).
.SH SEE ALSO
.BR pthread_create (3),
.BR pthread_equal (3),
.BR pthreads (7)
