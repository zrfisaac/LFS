'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH hypot 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
hypot, hypotf, hypotl \- Euclidean distance function
.SH LIBRARY
Math library
.RI ( libm ", " \-lm )
.SH SYNOPSIS
.nf
.B #include <math.h>
.P
.BI "double hypot(double " x ", double " y );
.BI "float hypotf(float " x ", float " y );
.BI "long double hypotl(long double " x ", long double " y );
.fi
.P
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR hypot ():
.nf
    _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
        || _XOPEN_SOURCE
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.P
.BR hypotf (),
.BR hypotl ():
.nf
    _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
These functions return
.RI sqrt( x * x + y * y ).
This is the length of the hypotenuse of a right-angled triangle
with sides of length
.I x
and
.IR y ,
or the distance of the point
.RI ( x , y )
from the origin.
.P
The calculation is performed without undue overflow or underflow
during the intermediate steps of the calculation.
.\" e.g., hypot(DBL_MIN, DBL_MIN) does the right thing, as does, say
.\" hypot(DBL_MAX/2.0, DBL_MAX/2.0).
.SH RETURN VALUE
On success, these functions return the length of the hypotenuse of
a right-angled triangle
with sides of length
.I x
and
.IR y .
.P
If
.I x
or
.I y
is an infinity,
positive infinity is returned.
.P
If
.I x
or
.I y
is a NaN,
and the other argument is not an infinity,
a NaN is returned.
.P
If the result overflows,
a range error occurs,
and the functions return
.BR HUGE_VAL ,
.BR HUGE_VALF ,
or
.BR HUGE_VALL ,
respectively.
.P
If both arguments are subnormal, and the result is subnormal,
.\" Actually, could the result not be subnormal if both arguments
.\" are subnormal?  I think not -- mtk, Jul 2008
a range error occurs,
and the correct result is returned.
.SH ERRORS
See
.BR math_error (7)
for information on how to determine whether an error has occurred
when calling these functions.
.P
The following errors can occur:
.TP
Range error: result overflow
.I errno
is set to
.BR ERANGE .
An overflow floating-point exception
.RB ( FE_OVERFLOW )
is raised.
.TP
Range error: result underflow
An underflow floating-point exception
.RB ( FE_UNDERFLOW )
is raised.
.IP
These functions do not set
.I errno
for this case.
.\" This is intentional; see
.\" https://www.sourceware.org/bugzilla/show_bug.cgi?id=6795
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR hypot (),
.BR hypotf (),
.BR hypotl ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
C11, POSIX.1-2008.
.SH HISTORY
C99, POSIX.1-2001.
.P
The variant returning
.I double
also conforms to
SVr4, 4.3BSD.
.SH SEE ALSO
.BR cabs (3),
.BR sqrt (3)
