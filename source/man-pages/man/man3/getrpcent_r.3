'\" t
.\" Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"	<mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH getrpcent_r 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
getrpcent_r, getrpcbyname_r, getrpcbynumber_r \- get
RPC entry (reentrant)
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <netdb.h>
.P
.BI "int getrpcent_r(struct rpcent *" result_buf ", char " buf [. buflen ],
.BI "                size_t " buflen ", struct rpcent **" result );
.BI "int getrpcbyname_r(const char *" name ,
.BI "                struct rpcent *" result_buf ", char " buf [. buflen ],
.BI "                size_t " buflen ", struct rpcent **" result );
.BI "int getrpcbynumber_r(int " number ,
.BI "                struct rpcent *" result_buf ", char " buf [. buflen ],
.BI "                size_t " buflen ", struct rpcent **" result );
.P
.fi
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR getrpcent_r (),
.BR getrpcbyname_r (),
.BR getrpcbynumber_r ():
.nf
    Since glibc 2.19:
        _DEFAULT_SOURCE
    glibc 2.19 and earlier:
        _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
The
.BR getrpcent_r (),
.BR getrpcbyname_r (),
and
.BR getrpcbynumber_r ()
functions are the reentrant equivalents of, respectively,
.BR getrpcent (3),
.BR getrpcbyname (3),
and
.BR getrpcbynumber (3).
They differ in the way that the
.I rpcent
structure is returned,
and in the function calling signature and return value.
This manual page describes just the differences from
the nonreentrant functions.
.P
Instead of returning a pointer to a statically allocated
.I rpcent
structure as the function result,
these functions copy the structure into the location pointed to by
.IR result_buf .
.P
The
.I buf
array is used to store the string fields pointed to by the returned
.I rpcent
structure.
(The nonreentrant functions allocate these strings in static storage.)
The size of this array is specified in
.IR buflen .
If
.I buf
is too small, the call fails with the error
.BR ERANGE ,
and the caller must try again with a larger buffer.
(A buffer of length 1024 bytes should be sufficient for most applications.)
.\" I can find no information on the required/recommended buffer size;
.\" the nonreentrant functions use a 1024 byte buffer -- mtk.
.P
If the function call successfully obtains an RPC record, then
.I *result
is set pointing to
.IR result_buf ;
otherwise,
.I *result
is set to NULL.
.SH RETURN VALUE
On success, these functions return 0.
On error, they return one of the positive error numbers listed in ERRORS.
.P
On error, record not found
.RB ( getrpcbyname_r (),
.BR getrpcbynumber_r ()),
or end of input
.RB ( getrpcent_r ())
.I result
is set to NULL.
.SH ERRORS
.TP
.B ENOENT
.RB ( getrpcent_r ())
No more records in database.
.TP
.B ERANGE
.I buf
is too small.
Try again with a larger buffer
(and increased
.IR buflen ).
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR getrpcent_r (),
.BR getrpcbyname_r (),
.BR getrpcbynumber_r ()
T}	Thread safety	MT-Safe locale
.TE
.SH VERSIONS
Functions with similar names exist on some other systems,
though typically with different calling signatures.
.SH STANDARDS
GNU.
.SH SEE ALSO
.BR getrpcent (3),
.BR rpc (5)
