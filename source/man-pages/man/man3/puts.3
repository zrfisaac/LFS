'\" t
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified Sat Jul 24 18:42:59 1993 by Rik Faith (faith@cs.unc.edu)
.TH puts 3 2024-06-15 "Linux man-pages (unreleased)"
.SH NAME
fputc, fputs, putc, putchar, puts \- output of characters and strings
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <stdio.h>
.P
.BI "int fputc(int " c ", FILE *" stream );
.BI "int putc(int " c ", FILE *" stream );
.BI "int putchar(int " c );
.P
.BI "int fputs(const char *restrict " s ", FILE *restrict " stream );
.BI "int puts(const char *" s );
.fi
.SH DESCRIPTION
.BR fputc ()
writes the character
.IR c ,
cast to an
.IR "unsigned char" ,
to
.IR stream .
.P
.BR putc ()
is equivalent to
.BR fputc ()
except that it may be implemented as a macro which evaluates
.I stream
more than once.
.P
.BI "putchar(" c )
is equivalent to
.BI "putc(" c ", " stdout ) \fR.
.P
.BR fputs ()
writes the string
.I s
to
.IR stream ,
without its terminating null byte (\[aq]\[rs]0\[aq]).
.P
.BR puts ()
writes the string
.I s
and a trailing newline
to
.IR stdout .
.P
Calls to the functions described here can be mixed with each other and with
calls to other output functions from the
.I stdio
library for the same output stream.
.P
For nonlocking counterparts, see
.BR unlocked_stdio (3).
.SH RETURN VALUE
.BR fputc (),
.BR putc (),
and
.BR putchar ()
return the character written as an
.I unsigned char
cast to an
.I int
or
.B EOF
on error.
.P
.BR puts ()
and
.BR fputs ()
return a nonnegative number on success, or
.B EOF
on error.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR fputc (),
.BR fputs (),
.BR putc (),
.BR putchar (),
.BR puts ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
C11, POSIX.1-2008.
.SH HISTORY
POSIX.1-2001, C89, C99.
.SH BUGS
It is not advisable to mix calls to output functions from the
.I stdio
library with low-level calls to
.BR write (2)
for the file descriptor associated with the same output stream; the results
will be undefined and very probably not what you want.
.SH SEE ALSO
.BR write (2),
.BR ferror (3),
.BR fgets (3),
.BR fopen (3),
.BR fputwc (3),
.BR fputws (3),
.BR fseek (3),
.BR fwrite (3),
.BR putwchar (3),
.BR scanf (3),
.BR unlocked_stdio (3)
