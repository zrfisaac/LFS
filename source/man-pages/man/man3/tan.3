'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH tan 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
tan, tanf, tanl \- tangent function
.SH LIBRARY
Math library
.RI ( libm ", " \-lm )
.SH SYNOPSIS
.nf
.B #include <math.h>
.P
.BI "double tan(double " x );
.BI "float tanf(float " x );
.BI "long double tanl(long double " x );
.fi
.P
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR tanf (),
.BR tanl ():
.nf
    _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
These functions return the tangent of
.IR x ,
where
.I x
is
given in radians.
.SH RETURN VALUE
On success, these functions return the tangent of
.IR x .
.P
If
.I x
is a NaN, a NaN is returned.
.P
If
.I x
is positive infinity or negative infinity,
a domain error occurs,
and a NaN is returned.
.P
If the correct result would overflow,
a range error occurs,
and the functions return
.BR HUGE_VAL ,
.BR HUGE_VALF ,
or
.BR HUGE_VALL ,
respectively, with the mathematically correct sign.
.\" I think overflow can't occur, because the closest floating-point
.\" representation of pi/2 is still not close enough to pi/2 to
.\" produce a large enough value to overflow.
.\" Testing certainly seems to bear this out.  -- mtk, Jul 08
.\"
.\" POSIX.1 allows an optional underflow error;
.\" glibc 2.8 doesn't do this
.\" POSIX.1 an optional range error for subnormal x;
.\" glibc 2.8 doesn't do this
.SH ERRORS
See
.BR math_error (7)
for information on how to determine whether an error has occurred
when calling these functions.
.P
The following errors can occur:
.TP
Domain error: \fIx\fP is an infinity
.I errno
is set to
.B EDOM
(but see BUGS).
An invalid floating-point exception
.RB ( FE_INVALID )
is raised.
.TP
Range error: result overflow
.\" Unable to test this case, since the best approximation of
.\" pi/2 in double precision only yields a tan() value of 1.633e16.
.\" .I errno
.\" is set to
.\" .BR ERANGE .
An overflow floating-point exception
.RB ( FE_OVERFLOW )
is raised.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR tan (),
.BR tanf (),
.BR tanl ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
C11, POSIX.1-2008.
.SH HISTORY
C99, POSIX.1-2001.
.P
The variant returning
.I double
also conforms to
SVr4, 4.3BSD, C89.
.SH BUGS
Before glibc 2.10, the glibc implementation did not set
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=6782
.I errno
to
.B EDOM
when a domain error occurred.
.SH SEE ALSO
.BR acos (3),
.BR asin (3),
.BR atan (3),
.BR atan2 (3),
.BR cos (3),
.BR ctan (3),
.BR sin (3)
