'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:40:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Jun 25 12:10:47 1999 by Andries Brouwer (aeb@cwi.nl)
.\"
.TH ecvt 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
ecvt, fcvt \- convert a floating-point number to a string
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <stdlib.h>
.P
.BI "[[deprecated]] char *ecvt(double " number ", int " ndigits ,
.BI "                          int *restrict " decpt ", int *restrict " sign );
.BI "[[deprecated]] char *fcvt(double " number ", int " ndigits ,
.BI "                          int *restrict " decpt ", int *restrict " sign );
.fi
.P
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR ecvt (),
.BR fcvt ():
.nf
    Since glibc 2.17
        (_XOPEN_SOURCE >= 500 && ! (_POSIX_C_SOURCE >= 200809L))
            || /* glibc >= 2.20 */ _DEFAULT_SOURCE
            || /* glibc <= 2.19 */ _SVID_SOURCE
    glibc 2.12 to glibc 2.16:
        (_XOPEN_SOURCE >= 500 && ! (_POSIX_C_SOURCE >= 200112L))
            || _SVID_SOURCE
    Before glibc 2.12:
        _SVID_SOURCE || _XOPEN_SOURCE >= 500
.\"        || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
.fi
.SH DESCRIPTION
The
.BR ecvt ()
function converts \fInumber\fP to a null-terminated
string of \fIndigits\fP digits (where \fIndigits\fP is reduced to a
system-specific limit determined by the precision of a
.IR double ),
and returns a pointer to the string.
The high-order digit is nonzero, unless
.I number
is zero.
The low order digit is rounded.
The string itself does not contain a decimal point; however,
the position of the decimal point relative to the start of the string
is stored in \fI*decpt\fP.
A negative value for \fI*decpt\fP means that
the decimal point is to the left of the start of the string.
If the sign of
\fInumber\fP is negative, \fI*sign\fP is set to a nonzero value,
otherwise it is set to 0.
If
.I number
is zero, it is unspecified whether \fI*decpt\fP is 0 or 1.
.P
The
.BR fcvt ()
function is identical to
.BR ecvt (),
except that
\fIndigits\fP specifies the number of digits after the decimal point.
.SH RETURN VALUE
Both the
.BR ecvt ()
and
.BR fcvt ()
functions return a pointer to a
static string containing the ASCII representation of \fInumber\fP.
The static string is overwritten by each call to
.BR ecvt ()
or
.BR fcvt ().
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR ecvt ()
T}	Thread safety	MT-Unsafe race:ecvt
T{
.na
.nh
.BR fcvt ()
T}	Thread safety	MT-Unsafe race:fcvt
.TE
.SH STANDARDS
None.
.SH HISTORY
SVr2;
marked as LEGACY in POSIX.1-2001.
POSIX.1-2008 removes the specifications of
.BR ecvt ()
and
.BR fcvt (),
recommending the use of
.BR sprintf (3)
instead (though
.BR snprintf (3)
may be preferable).
.SH NOTES
.\" Linux libc4 and libc5 specified the type of
.\" .I ndigits
.\" as
.\" .IR size_t .
Not all locales use a point as the radix character ("decimal point").
.SH SEE ALSO
.BR ecvt_r (3),
.BR gcvt (3),
.BR qecvt (3),
.BR setlocale (3),
.BR sprintf (3)
