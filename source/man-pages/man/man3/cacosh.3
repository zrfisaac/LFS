'\" t
.\" Copyright 2002 Walter Harms(walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright (C) 2011 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: GPL-1.0-or-later
.\"
.TH cacosh 3 2024-06-15 "Linux man-pages (unreleased)"
.SH NAME
cacosh, cacoshf, cacoshl \- complex arc hyperbolic cosine
.SH LIBRARY
Math library
.RI ( libm ", " \-lm )
.SH SYNOPSIS
.nf
.B #include <complex.h>
.P
.BI "double complex cacosh(double complex " z );
.BI "float complex cacoshf(float complex " z );
.BI "long double complex cacoshl(long double complex " z );
.fi
.SH DESCRIPTION
These functions calculate the complex arc hyperbolic cosine of
.IR z .
If \fIy\ =\ cacosh(z)\fP, then \fIz\ =\ ccosh(y)\fP.
The imaginary part of
.I y
is chosen in the interval [\-pi,pi].
The real part of
.I y
is chosen nonnegative.
.P
One has:
.P
.nf
    cacosh(z) = 2 * clog(csqrt((z + 1) / 2) + csqrt((z \- 1) / 2))
.fi
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR cacosh (),
.BR cacoshf (),
.BR cacoshl ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
C11, POSIX.1-2008.
.SH HISTORY
C99, POSIX.1-2001.
glibc 2.1.
.SH EXAMPLES
.\" SRC BEGIN (cacosh.c)
.EX
/* Link with "\-lm" */
\&
#include <complex.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
\&
int
main(int argc, char *argv[])
{
    double complex z, c, f;
\&
    if (argc != 3) {
        fprintf(stderr, "Usage: %s <real> <imag>\[rs]n", argv[0]);
        exit(EXIT_FAILURE);
    }
\&
    z = atof(argv[1]) + atof(argv[2]) * I;
\&
    c = cacosh(z);
    printf("cacosh() = %6.3f %6.3f*i\[rs]n", creal(c), cimag(c));
\&
    f = 2 * clog(csqrt((z + 1)/2) + csqrt((z \- 1)/2));
    printf("formula  = %6.3f %6.3f*i\[rs]n", creal(f), cimag(f));
\&
    exit(EXIT_SUCCESS);
}
.EE
.\" SRC END
.SH SEE ALSO
.BR acosh (3),
.BR cabs (3),
.BR ccosh (3),
.BR cimag (3),
.BR complex (7)
