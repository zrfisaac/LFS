'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH atan2 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
atan2, atan2f, atan2l \- arc tangent function of two variables
.SH LIBRARY
Math library
.RI ( libm ", " \-lm )
.SH SYNOPSIS
.nf
.B #include <math.h>
.P
.BI "double atan2(double " y ", double " x );
.BI "float atan2f(float " y ", float " x );
.BI "long double atan2l(long double " y ", long double " x );
.fi
.P
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR atan2f (),
.BR atan2l ():
.nf
    _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
These functions calculate the principal value of the arc tangent of
.IR y/x ,
using the signs of the two arguments to determine
the quadrant of the result.
.SH RETURN VALUE
On success, these functions return the principal value of the arc tangent of
.I y/x
in radians; the return value is in the range [\-pi,\ pi].
.P
If
.I y
is +0 (\-0) and
.I x
is less than 0, +pi (\-pi) is returned.
.P
If
.I y
is +0 (\-0) and
.I x
is greater than 0, +0 (\-0) is returned.
.P
If
.I y
is less than 0 and
.I x
is +0 or \-0, \-pi/2 is returned.
.P
If
.I y
is greater than 0 and
.I x
is +0 or \-0, pi/2 is returned.
.P
.\" POSIX.1 says:
.\" If
.\" .I x
.\" is 0, a pole error shall not occur.
.\"
If either
.I x
or
.I y
is NaN, a NaN is returned.
.P
.\" POSIX.1 says:
.\" If the result underflows, a range error may occur and
.\" .I y/x
.\" should be returned.
.\"
If
.I y
is +0 (\-0) and
.I x
is \-0, +pi (\-pi) is returned.
.P
If
.I y
is +0 (\-0) and
.I x
is +0, +0 (\-0) is returned.
.P
If
.I y
is a finite value greater (less) than 0, and
.I x
is negative infinity, +pi (\-pi) is returned.
.P
If
.I y
is a finite value greater (less) than 0, and
.I x
is positive infinity, +0 (\-0) is returned.
.P
If
.I y
is positive infinity (negative infinity), and
.I x
is finite,
pi/2 (\-pi/2) is returned.
.P
If
.I y
is positive infinity (negative infinity) and
.I x
is negative infinity, +3*pi/4 (\-3*pi/4) is returned.
.P
If
.I y
is positive infinity (negative infinity) and
.I x
is positive infinity, +pi/4 (\-pi/4) is returned.
.\"
.\" POSIX.1 says:
.\" If both arguments are 0, a domain error shall not occur.
.SH ERRORS
No errors occur.
.\" POSIX.1 documents an optional underflow error
.\" glibc 2.8 does not do this.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR atan2 (),
.BR atan2f (),
.BR atan2l ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
C11, POSIX.1-2008.
.SH HISTORY
C99, POSIX.1-2001.
.P
The variant returning
.I double
also conforms to
SVr4, 4.3BSD, C89.
.SH SEE ALSO
.BR acos (3),
.BR asin (3),
.BR atan (3),
.BR carg (3),
.BR cos (3),
.BR sin (3),
.BR tan (3)
