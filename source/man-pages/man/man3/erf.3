'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.TH erf 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
erf, erff, erfl \- error function
.SH LIBRARY
Math library
.RI ( libm ", " \-lm )
.SH SYNOPSIS
.nf
.B #include <math.h>
.P
.BI "double erf(double " x );
.BI "float erff(float " x );
.BI "long double erfl(long double " x );
.P
.fi
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR erf ():
.nf
    _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.P
.BR erff (),
.BR erfl ():
.nf
    _ISOC99_SOURCE || _POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
These functions return the error function of
.IR x ,
defined as
.P
.in +4n
.EX
erf(x) = 2/sqrt(pi) * integral from 0 to x of exp(\-t*t) dt
.EE
.in
.SH RETURN VALUE
On success, these functions return the value of the error function of
.IR x ,
a value in the range [\-1,\ 1].
.P
If
.I x
is a NaN, a NaN is returned.
.P
If
.I x
is +0 (\-0), +0 (\-0) is returned.
.P
If
.I x
is positive infinity (negative infinity),
+1 (\-1) is returned.
.P
If
.I x
is subnormal,
a range error occurs,
and the return value is 2*x/sqrt(pi).
.SH ERRORS
See
.BR math_error (7)
for information on how to determine whether an error has occurred
when calling these functions.
.P
The following errors can occur:
.TP
Range error: result underflow (\fIx\fP is subnormal)
.\" .I errno
.\" is set to
.\" .BR ERANGE .
An underflow floating-point exception
.RB ( FE_UNDERFLOW )
is raised.
.P
These functions do not set
.IR errno .
.\" It is intentional that these functions do not set errno for this case
.\" see https://www.sourceware.org/bugzilla/show_bug.cgi?id=6785
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR erf (),
.BR erff (),
.BR erfl ()
T}	Thread safety	MT-Safe
.TE
.SH STANDARDS
C11, POSIX.1-2008.
.SH HISTORY
C99, POSIX.1-2001.
.P
The variant returning
.I double
also conforms to
SVr4, 4.3BSD.
.SH SEE ALSO
.BR cerf (3),
.BR erfc (3),
.BR exp (3)
