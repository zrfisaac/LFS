'\" t
.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.TH timegm 3 2024-05-02 "Linux man-pages (unreleased)"
.SH NAME
timegm, timelocal \- inverses of gmtime and localtime
.SH LIBRARY
Standard C library
.RI ( libc ", " \-lc )
.SH SYNOPSIS
.nf
.B #include <time.h>
.P
.BI "[[deprecated]] time_t timelocal(struct tm *" tm );
.BI "time_t timegm(struct tm *" tm );
.P
.fi
.RS -4
Feature Test Macro Requirements for glibc (see
.BR feature_test_macros (7)):
.RE
.P
.BR timelocal (),
.BR timegm ():
.nf
    Since glibc 2.19:
        _DEFAULT_SOURCE
    glibc 2.19 and earlier:
        _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
The functions
.BR timelocal ()
and
.BR timegm ()
are the inverses of
.BR localtime (3)
and
.BR gmtime (3).
Both functions take a broken-down time and convert it to calendar time
(seconds since the Epoch, 1970-01-01 00:00:00 +0000, UTC).
The difference between the two functions is that
.BR timelocal ()
takes the local timezone into account when doing the conversion, while
.BR timegm ()
takes the input value to be Coordinated Universal Time (UTC).
.SH RETURN VALUE
On success,
these functions return the calendar time (seconds since the Epoch),
expressed as a value of type
.IR time_t .
On error, they return the value
.I (time_t)\ \-1
and set
.I errno
to indicate the error.
.SH ERRORS
.TP
.B EOVERFLOW
The result cannot be represented.
.SH ATTRIBUTES
For an explanation of the terms used in this section, see
.BR attributes (7).
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
.na
.nh
.BR timelocal (),
.BR timegm ()
T}	Thread safety	MT-Safe env locale
.TE
.SH STANDARDS
BSD.
.SH HISTORY
GNU, BSD.
.P
The
.BR timelocal ()
function is equivalent to the POSIX standard function
.BR mktime (3).
There is no reason to ever use it.
.SH SEE ALSO
.BR gmtime (3),
.BR localtime (3),
.BR mktime (3),
.BR tzset (3)
