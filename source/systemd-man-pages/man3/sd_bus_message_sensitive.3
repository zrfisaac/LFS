'\" t
.TH "SD_BUS_MESSAGE_SENSITIVE" "3" "" "systemd 256.4" "sd_bus_message_sensitive"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
sd_bus_message_sensitive \- Mark a message object as containing sensitive data
.SH "SYNOPSIS"
.sp
.ft B
.nf
#include <systemd/sd\-bus\&.h>
.fi
.ft
.HP \w'int\ sd_bus_message_sensitive('u
.BI "int sd_bus_message_sensitive(sd_bus_message\ *" "message" ");"
.SH "DESCRIPTION"
.PP
\fBsd_bus_message_sensitive()\fR
marks an allocated bus message as containing sensitive data\&. This ensures that the message data is carefully removed from memory (specifically, overwritten with zero bytes) when released\&. It is recommended to mark all incoming and outgoing messages like this that contain security credentials and similar data that should be dealt with carefully\&. Note that it is not possible to unmark messages like this, it\*(Aqs a one way operation\&. If a message is already marked sensitive and then marked sensitive a second time the message remains marked so and no further operation is executed\&.
.PP
As a safety precaution all messages that are created as reply to messages that are marked sensitive are also implicitly marked so\&.
.SH "RETURN VALUE"
.PP
On success, this functions return 0 or a positive integer\&. On failure, it returns a negative errno\-style error code\&.
.SS "Errors"
.PP
Returned errors may indicate the following problems:
.PP
\fB\-EINVAL\fR
.RS 4
The
\fImessage\fR
parameter is
\fBNULL\fR\&.
.sp
Added in version 245\&.
.RE
.SH "NOTES"
.PP
Functions described here are available as a shared library, which can be compiled against and linked to with the
\fBlibsystemd\fR\ \&\fBpkg-config\fR(1)
file\&.
.PP
The code described here uses
\fBgetenv\fR(3), which is declared to be not multi\-thread\-safe\&. This means that the code calling the functions described here must not call
\fBsetenv\fR(3)
from a parallel thread\&. It is recommended to only do calls to
\fBsetenv()\fR
from an early phase of the program when no other threads have been started\&.
.SH "HISTORY"
.PP
\fBsd_bus_message_sensitive()\fR
was added in version 245\&.
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1), \fBsd-bus\fR(3), \fBsd_bus_message_new_method_call\fR(3)
