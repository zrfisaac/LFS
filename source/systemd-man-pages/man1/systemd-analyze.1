'\" t
.TH "SYSTEMD\-ANALYZE" "1" "" "systemd 256.4" "systemd-analyze"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd-analyze \- Analyze and debug system manager
.SH "SYNOPSIS"
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] [time]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] blame
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] critical\-chain [\fIUNIT\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] dump [\fIPATTERN\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] plot [>file\&.svg]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] dot [\fIPATTERN\fR...] [>file\&.dot]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] unit\-files
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] unit\-paths
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] exit\-status [\fISTATUS\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] capability [\fICAPABILITY\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] condition \fICONDITION\fR\&...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] syscall\-filter [\fISET\fR\&...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] filesystems [\fISET\fR\&...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] calendar \fISPEC\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] timestamp \fITIMESTAMP\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] timespan \fISPAN\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] cat\-config \fINAME\fR|\fIPATH\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] compare\-versions \fIVERSION1\fR [\fIOP\fR] \fIVERSION2\fR
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] verify \fIFILE\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] security [\fIUNIT\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] inspect\-elf \fIFILE\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] malloc [\fID\-BUS\ SERVICE\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] fdstore \fIUNIT\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] image\-policy \fIPOLICY\fR...
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] pcrs [\fIPCR\fR...]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] srk [\fI>FILE\fR]
.HP \w'\fBsystemd\-analyze\fR\ 'u
\fBsystemd\-analyze\fR [OPTIONS...] architectures [\fINAME\fR...]
.SH "DESCRIPTION"
.PP
\fBsystemd\-analyze\fR
may be used to determine system boot\-up performance statistics and retrieve other state and tracing information from the system and service manager, and to verify the correctness of unit files\&. It is also used to access special functions useful for advanced system manager debugging\&.
.PP
If no command is passed,
\fBsystemd\-analyze time\fR
is implied\&.
.SS "systemd\-analyze time"
.PP
This command prints the time spent in the kernel before userspace has been reached, the time spent in the initrd before normal system userspace has been reached, and the time normal system userspace took to initialize\&. Note that these measurements simply measure the time passed up to the point where all system services have been spawned, but not necessarily until they fully finished initialization or the disk is idle\&.
.PP
\fBExample\ \&1.\ \&Show how long the boot took\fR
.sp
.if n \{\
.RS 4
.\}
.nf
# in a container
$ systemd\-analyze time
Startup finished in 296ms (userspace)
multi\-user\&.target reached after 275ms in userspace

# on a real machine
$ systemd\-analyze time
Startup finished in 2\&.584s (kernel) + 19\&.176s (initrd) + 47\&.847s (userspace) = 1min 9\&.608s
multi\-user\&.target reached after 47\&.820s in userspace
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze blame"
.PP
This command prints a list of all running units, ordered by the time they took to initialize\&. This information may be used to optimize boot\-up times\&. Note that the output might be misleading as the initialization of one service might be slow simply because it waits for the initialization of another service to complete\&. Also note:
\fBsystemd\-analyze blame\fR
doesn\*(Aqt display results for services with
\fIType=simple\fR, because systemd considers such services to be started immediately, hence no measurement of the initialization delays can be done\&. Also note that this command only shows the time units took for starting up, it does not show how long unit jobs spent in the execution queue\&. In particular it shows the time units spent in
"activating"
state, which is not defined for units such as device units that transition directly from
"inactive"
to
"active"\&. This command hence gives an impression of the performance of program code, but cannot accurately reflect latency introduced by waiting for hardware and similar events\&.
.PP
\fBExample\ \&2.\ \&Show which units took the most time during boot\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze blame
         32\&.875s pmlogger\&.service
         20\&.905s systemd\-networkd\-wait\-online\&.service
         13\&.299s dev\-vda1\&.device
         \&.\&.\&.
            23ms sysroot\&.mount
            11ms initrd\-udevadm\-cleanup\-db\&.service
             3ms sys\-kernel\-config\&.mount
        
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze critical\-chain [\fIUNIT\fR\&.\&.\&.]"
.PP
This command prints a tree of the time\-critical chain of units (for each of the specified
\fIUNIT\fRs or for the default target otherwise)\&. The time after the unit is active or started is printed after the "@" character\&. The time the unit takes to start is printed after the "+" character\&. Note that the output might be misleading as the initialization of services might depend on socket activation and because of the parallel execution of units\&. Also, similarly to the
\fBblame\fR
command, this only takes into account the time units spent in
"activating"
state, and hence does not cover units that never went through an
"activating"
state (such as device units that transition directly from
"inactive"
to
"active")\&. Moreover it does not show information on jobs (and in particular not jobs that timed out)\&.
.PP
\fBExample\ \&3.\ \&systemd\-analyze critical\-chain\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze critical\-chain
multi\-user\&.target @47\&.820s
└─pmie\&.service @35\&.968s +548ms
  └─pmcd\&.service @33\&.715s +2\&.247s
    └─network\-online\&.target @33\&.712s
      └─systemd\-networkd\-wait\-online\&.service @12\&.804s +20\&.905s
        └─systemd\-networkd\&.service @11\&.109s +1\&.690s
          └─systemd\-udevd\&.service @9\&.201s +1\&.904s
            └─systemd\-tmpfiles\-setup\-dev\&.service @7\&.306s +1\&.776s
              └─kmod\-static\-nodes\&.service @6\&.976s +177ms
                └─systemd\-journald\&.socket
                  └─system\&.slice
                    └─\-\&.slice
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze dump [\fIpattern\fR\&...]"
.PP
Without any parameter, this command outputs a (usually very long) human\-readable serialization of the complete service manager state\&. Optional glob pattern may be specified, causing the output to be limited to units whose names match one of the patterns\&. The output format is subject to change without notice and should not be parsed by applications\&. This command is rate limited for unprivileged users\&.
.PP
\fBExample\ \&4.\ \&Show the internal state of user manager\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze \-\-user dump
Timestamp userspace: Thu 2019\-03\-14 23:28:07 CET
Timestamp finish: Thu 2019\-03\-14 23:28:07 CET
Timestamp generators\-start: Thu 2019\-03\-14 23:28:07 CET
Timestamp generators\-finish: Thu 2019\-03\-14 23:28:07 CET
Timestamp units\-load\-start: Thu 2019\-03\-14 23:28:07 CET
Timestamp units\-load\-finish: Thu 2019\-03\-14 23:28:07 CET
\-> Unit proc\-timer_list\&.mount:
        Description: /proc/timer_list
        \&.\&.\&.
\-> Unit default\&.target:
        Description: Main user target
\&.\&.\&.
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze malloc [\fID\-Bus service\fR\&...]"
.PP
This command can be used to request the output of the internal memory state (as returned by
\fBmalloc_info\fR(3)) of a D\-Bus service\&. If no service is specified, the query will be sent to
org\&.freedesktop\&.systemd1
(the system or user service manager)\&. The output format is not guaranteed to be stable and should not be parsed by applications\&.
.PP
The service must implement the
org\&.freedesktop\&.MemoryAllocation1
interface\&. In the systemd suite, it is currently only implemented by the manager\&.
.SS "systemd\-analyze plot"
.PP
This command prints either an SVG graphic, detailing which system services have been started at what time, highlighting the time they spent on initialization, or the raw time data in JSON or table format\&.
.PP
\fBExample\ \&5.\ \&Plot a bootchart\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze plot >bootup\&.svg
$ eog bootup\&.svg&
.fi
.if n \{\
.RE
.\}
.PP
Note that this plot is based on the most recent per\-unit timing data of loaded units\&. This means that if a unit gets started, then stopped and then started again the information shown will cover the most recent start cycle, not the first one\&. Thus it\*(Aqs recommended to consult this information only shortly after boot, so that this distinction doesn\*(Aqt matter\&. Moreover, units that are not referenced by any other unit through a dependency might be unloaded by the service manager once they terminate (and did not fail)\&. Such units will not show up in the plot\&.
.SS "systemd\-analyze dot [\fIpattern\fR\&.\&.\&.]"
.PP
This command generates textual dependency graph description in dot format for further processing with the GraphViz
\fBdot\fR(1)
tool\&. Use a command line like
\fBsystemd\-analyze dot | dot \-Tsvg >systemd\&.svg\fR
to generate a graphical dependency tree\&. Unless
\fB\-\-order\fR
or
\fB\-\-require\fR
is passed, the generated graph will show both ordering and requirement dependencies\&. Optional pattern globbing style specifications (e\&.g\&.
*\&.target) may be given at the end\&. A unit dependency is included in the graph if any of these patterns match either the origin or destination node\&.
.PP
\fBExample\ \&6.\ \&Plot all dependencies of any unit whose name starts with "avahi\-daemon"\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze dot \*(Aqavahi\-daemon\&.*\*(Aq | dot \-Tsvg >avahi\&.svg
$ eog avahi\&.svg
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&7.\ \&Plot the dependencies between all known target units\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze dot \-\-to\-pattern=\*(Aq*\&.target\*(Aq \-\-from\-pattern=\*(Aq*\&.target\*(Aq \e
      | dot \-Tsvg >targets\&.svg
$ eog targets\&.svg
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze unit\-paths"
.PP
This command outputs a list of all directories from which unit files,
\&.d
overrides, and
\&.wants,
\&.requires
symlinks may be loaded\&. Combine with
\fB\-\-user\fR
to retrieve the list for the user manager instance, and
\fB\-\-global\fR
for the global configuration of user manager instances\&.
.PP
\fBExample\ \&8.\ \&Show all paths for generated units\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze unit\-paths | grep \*(Aq^/run\*(Aq
/run/systemd/system\&.control
/run/systemd/transient
/run/systemd/generator\&.early
/run/systemd/system
/run/systemd/system\&.attached
/run/systemd/generator
/run/systemd/generator\&.late
.fi
.if n \{\
.RE
.\}
.PP
Note that this verb prints the list that is compiled into
\fBsystemd\-analyze\fR
itself, and does not communicate with the running manager\&. Use
.sp
.if n \{\
.RS 4
.\}
.nf
systemctl [\-\-user] [\-\-global] show \-p UnitPath \-\-value
.fi
.if n \{\
.RE
.\}
.sp
to retrieve the actual list that the manager uses, with any empty directories omitted\&.
.SS "systemd\-analyze exit\-status [\fISTATUS\fR\&.\&.\&.]"
.PP
This command prints a list of exit statuses along with their "class", i\&.e\&. the source of the definition (one of
"glibc",
"systemd",
"LSB", or
"BSD"), see the Process Exit Codes section in
\fBsystemd.exec\fR(5)\&. If no additional arguments are specified, all known statuses are shown\&. Otherwise, only the definitions for the specified codes are shown\&.
.PP
\fBExample\ \&9.\ \&Show some example exit status names\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze exit\-status 0 1 {63\&.\&.65}
NAME    STATUS CLASS
SUCCESS 0      glibc
FAILURE 1      glibc
\-       63     \-
USAGE   64     BSD
DATAERR 65     BSD
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze capability [\fICAPABILITY\fR\&.\&.\&.]"
.PP
This command prints a list of Linux capabilities along with their numeric IDs\&. See
\fBcapabilities\fR(7)
for details\&. If no argument is specified the full list of capabilities known to the service manager and the kernel is shown\&. Capabilities defined by the kernel but not known to the service manager are shown as
"cap_???"\&. Optionally, if arguments are specified they may refer to specific cabilities by name or numeric ID, in which case only the indicated capabilities are shown in the table\&.
.PP
\fBExample\ \&10.\ \&Show some example capability names\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze capability 0 1 {30\&.\&.32}
NAME              NUMBER
cap_chown              0
cap_dac_override       1
cap_audit_control     30
cap_setfcap           31
cap_mac_override      32
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze condition \fICONDITION\fR\&.\&.\&."
.PP
This command will evaluate
\fICondition*=\&.\&.\&.\fR
and
\fIAssert*=\&.\&.\&.\fR
assignments, and print their values, and the resulting value of the combined condition set\&. See
\fBsystemd.unit\fR(5)
for a list of available conditions and asserts\&.
.PP
\fBExample\ \&11.\ \&Evaluate conditions that check kernel versions\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze condition \*(AqConditionKernelVersion = ! <4\&.0\*(Aq \e
        \*(AqConditionKernelVersion = >=5\&.1\*(Aq \e
        \*(AqConditionACPower=|false\*(Aq \e
        \*(AqConditionArchitecture=|!arm\*(Aq \e
        \*(AqAssertPathExists=/etc/os\-release\*(Aq
test\&.service: AssertPathExists=/etc/os\-release succeeded\&.
Asserts succeeded\&.
test\&.service: ConditionArchitecture=|!arm succeeded\&.
test\&.service: ConditionACPower=|false failed\&.
test\&.service: ConditionKernelVersion=>=5\&.1 succeeded\&.
test\&.service: ConditionKernelVersion=!<4\&.0 succeeded\&.
Conditions succeeded\&.
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze syscall\-filter [\fISET\fR\&.\&.\&.]"
.PP
This command will list system calls contained in the specified system call set
\fISET\fR, or all known sets if no sets are specified\&. Argument
\fISET\fR
must include the
"@"
prefix\&.
.SS "systemd\-analyze filesystems [\fISET\fR\&.\&.\&.]"
.PP
This command will list filesystems in the specified filesystem set
\fISET\fR, or all known sets if no sets are specified\&. Argument
\fISET\fR
must include the
"@"
prefix\&.
.SS "systemd\-analyze calendar \fIEXPRESSION\fR\&.\&.\&."
.PP
This command will parse and normalize repetitive calendar time events, and will calculate when they elapse next\&. This takes the same input as the
\fIOnCalendar=\fR
setting in
\fBsystemd.timer\fR(5), following the syntax described in
\fBsystemd.time\fR(7)\&. By default, only the next time the calendar expression will elapse is shown; use
\fB\-\-iterations=\fR
to show the specified number of next times the expression elapses\&. Each time the expression elapses forms a timestamp, see the
\fBtimestamp\fR
verb below\&.
.PP
\fBExample\ \&12.\ \&Show leap days in the near future\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze calendar \-\-iterations=5 \*(Aq*\-2\-29 0:0:0\*(Aq
  Original form: *\-2\-29 0:0:0
Normalized form: *\-02\-29 00:00:00
    Next elapse: Sat 2020\-02\-29 00:00:00 UTC
       From now: 11 months 15 days left
       Iter\&. #2: Thu 2024\-02\-29 00:00:00 UTC
       From now: 4 years 11 months left
       Iter\&. #3: Tue 2028\-02\-29 00:00:00 UTC
       From now: 8 years 11 months left
       Iter\&. #4: Sun 2032\-02\-29 00:00:00 UTC
       From now: 12 years 11 months left
       Iter\&. #5: Fri 2036\-02\-29 00:00:00 UTC
       From now: 16 years 11 months left
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze timestamp \fITIMESTAMP\fR\&.\&.\&."
.PP
This command parses a timestamp (i\&.e\&. a single point in time) and outputs the normalized form and the difference between this timestamp and now\&. The timestamp should adhere to the syntax documented in
\fBsystemd.time\fR(7), section "PARSING TIMESTAMPS"\&.
.PP
\fBExample\ \&13.\ \&Show parsing of timestamps\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze timestamp yesterday now tomorrow
  Original form: yesterday
Normalized form: Mon 2019\-05\-20 00:00:00 CEST
       (in UTC): Sun 2019\-05\-19 22:00:00 UTC
   UNIX seconds: @15583032000
       From now: 1 day 9h ago

  Original form: now
Normalized form: Tue 2019\-05\-21 09:48:39 CEST
       (in UTC): Tue 2019\-05\-21 07:48:39 UTC
   UNIX seconds: @1558424919\&.659757
       From now: 43us ago

  Original form: tomorrow
Normalized form: Wed 2019\-05\-22 00:00:00 CEST
       (in UTC): Tue 2019\-05\-21 22:00:00 UTC
   UNIX seconds: @15584760000
       From now: 14h left
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze timespan \fIEXPRESSION\fR\&.\&.\&."
.PP
This command parses a time span (i\&.e\&. a difference between two timestamps) and outputs the normalized form and the equivalent value in microseconds\&. The time span should adhere to the syntax documented in
\fBsystemd.time\fR(7), section "PARSING TIME SPANS"\&. Values without units are parsed as seconds\&.
.PP
\fBExample\ \&14.\ \&Show parsing of timespans\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze timespan 1s 300s \*(Aq1year 0\&.000001s\*(Aq
Original: 1s
      μs: 1000000
   Human: 1s

Original: 300s
      μs: 300000000
   Human: 5min

Original: 1year 0\&.000001s
      μs: 31557600000001
   Human: 1y 1us
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze cat\-config \fINAME\fR|\fIPATH\fR\&.\&.\&."
.PP
This command is similar to
\fBsystemctl cat\fR, but operates on config files\&. It will copy the contents of a config file and any drop\-ins to standard output, using the usual systemd set of directories and rules for precedence\&. Each argument must be either an absolute path including the prefix (such as
/etc/systemd/logind\&.conf
or
/usr/lib/systemd/logind\&.conf), or a name relative to the prefix (such as
systemd/logind\&.conf)\&.
.PP
\fBExample\ \&15.\ \&Showing logind configuration\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze cat\-config systemd/logind\&.conf
# /etc/systemd/logind\&.conf
\&.\&.\&.
[Login]
NAutoVTs=8
\&.\&.\&.

# /usr/lib/systemd/logind\&.conf\&.d/20\-test\&.conf
\&.\&.\&. some override from another package

# /etc/systemd/logind\&.conf\&.d/50\-override\&.conf
\&.\&.\&. some administrator override
        
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze compare\-versions \fIVERSION1\fR [\fIOP\fR] \fIVERSION2\fR"
.PP
This command has two distinct modes of operation, depending on whether the operator
\fIOP\fR
is specified\&.
.PP
In the first mode \(em when
\fIOP\fR
is not specified \(em it will compare the two version strings and print either
"\fIVERSION1\fR < \fIVERSION2\fR", or
"\fIVERSION1\fR == \fIVERSION2\fR", or
"\fIVERSION1\fR > \fIVERSION2\fR"
as appropriate\&.
.PP
The exit status is
\fB0\fR
if the versions are equal,
\fB11\fR
if the version of the right is smaller, and
\fB12\fR
if the version of the left is smaller\&. (This matches the convention used by
\fBrpmdev\-vercmp\fR\&.)
.PP
In the second mode \(em when
\fIOP\fR
is specified \(em it will compare the two version strings using the operation
\fIOP\fR
and return
\fB0\fR
(success) if they condition is satisfied, and
\fB1\fR
(failure) otherwise\&.
\fBOP\fR
may be
\fBlt\fR,
\fBle\fR,
\fBeq\fR,
\fBne\fR,
\fBge\fR,
\fBgt\fR\&. In this mode, no output is printed\&. (This matches the convention used by
\fBdpkg\fR(1)
\fB\-\-compare\-versions\fR\&.)
.PP
\fBExample\ \&16.\ \&Compare versions of a package\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze compare\-versions systemd\-250~rc1\&.fc36\&.aarch64 systemd\-251\&.fc36\&.aarch64
systemd\-250~rc1\&.fc36\&.aarch64 < systemd\-251\&.fc36\&.aarch64
$ echo $?
12

$ systemd\-analyze compare\-versions 1 lt 2; echo $?
0
$ systemd\-analyze compare\-versions 1 ge 2; echo $?
1
        
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze verify \fIFILE\fR\&.\&.\&."
.PP
This command will load unit files and print warnings if any errors are detected\&. Files specified on the command line will be loaded, but also any other units referenced by them\&. A unit\*(Aqs name on disk can be overridden by specifying an alias after a colon; see below for an example\&. The full unit search path is formed by combining the directories for all command line arguments, and the usual unit load paths\&. The variable
\fI$SYSTEMD_UNIT_PATH\fR
is supported, and may be used to replace or augment the compiled in set of unit load paths; see
\fBsystemd.unit\fR(5)\&. All units files present in the directories containing the command line arguments will be used in preference to the other paths\&.
.PP
The following errors are currently detected:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
unknown sections and directives,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
missing dependencies which are required to start the given unit,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
man pages listed in
\fIDocumentation=\fR
which are not found in the system,
.RE
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
commands listed in
\fIExecStart=\fR
and similar which are not found in the system or not executable\&.
.RE
.PP
\fBExample\ \&17.\ \&Misspelt directives\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ cat \&./user\&.slice
[Unit]
WhatIsThis=11
Documentation=man:nosuchfile(1)
Requires=different\&.service

[Service]
Description=x

$ systemd\-analyze verify \&./user\&.slice
[\&./user\&.slice:9] Unknown lvalue \*(AqWhatIsThis\*(Aq in section \*(AqUnit\*(Aq
[\&./user\&.slice:13] Unknown section \*(AqService\*(Aq\&. Ignoring\&.
Error: org\&.freedesktop\&.systemd1\&.LoadFailed:
   Unit different\&.service failed to load:
   No such file or directory\&.
Failed to create user\&.slice/start: Invalid argument
user\&.slice: man nosuchfile(1) command failed with code 16
        
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&18.\ \&Missing service units\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ tail \&./a\&.socket \&./b\&.socket
==> \&./a\&.socket <==
[Socket]
ListenStream=100

==> \&./b\&.socket <==
[Socket]
ListenStream=100
Accept=yes

$ systemd\-analyze verify \&./a\&.socket \&./b\&.socket
Service a\&.service not loaded, a\&.socket cannot be started\&.
Service b@0\&.service not loaded, b\&.socket cannot be started\&.
        
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&19.\ \&Aliasing a unit\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ cat /tmp/source
[Unit]
Description=Hostname printer

[Service]
Type=simple
ExecStart=/usr/bin/echo %H
MysteryKey=true

$ systemd\-analyze verify /tmp/source
Failed to prepare filename /tmp/source: Invalid argument

$ systemd\-analyze verify /tmp/source:alias\&.service
alias\&.service:7: Unknown key name \*(AqMysteryKey\*(Aq in section \*(AqService\*(Aq, ignoring\&.
        
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze security [\fIUNIT\fR\&.\&.\&.]"
.PP
This command analyzes the security and sandboxing settings of one or more specified service units\&. If at least one unit name is specified the security settings of the specified service units are inspected and a detailed analysis is shown\&. If no unit name is specified, all currently loaded, long\-running service units are inspected and a terse table with results shown\&. The command checks for various security\-related service settings, assigning each a numeric "exposure level" value, depending on how important a setting is\&. It then calculates an overall exposure level for the whole unit, which is an estimation in the range 0\&.0\&...10\&.0 indicating how exposed a service is security\-wise\&. High exposure levels indicate very little applied sandboxing\&. Low exposure levels indicate tight sandboxing and strongest security restrictions\&. Note that this only analyzes the per\-service security features systemd itself implements\&. This means that any additional security mechanisms applied by the service code itself are not accounted for\&. The exposure level determined this way should not be misunderstood: a high exposure level neither means that there is no effective sandboxing applied by the service code itself, nor that the service is actually vulnerable to remote or local attacks\&. High exposure levels do indicate however that most likely the service might benefit from additional settings applied to them\&.
.PP
Please note that many of the security and sandboxing settings individually can be circumvented \(em unless combined with others\&. For example, if a service retains the privilege to establish or undo mount points many of the sandboxing options can be undone by the service code itself\&. Due to that is essential that each service uses the most comprehensive and strict sandboxing and security settings possible\&. The tool will take into account some of these combinations and relationships between the settings, but not all\&. Also note that the security and sandboxing settings analyzed here only apply to the operations executed by the service code itself\&. If a service has access to an IPC system (such as D\-Bus) it might request operations from other services that are not subject to the same restrictions\&. Any comprehensive security and sandboxing analysis is hence incomplete if the IPC access policy is not validated too\&.
.PP
\fBExample\ \&20.\ \&Analyze systemd\-logind\&.service\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze security \-\-no\-pager systemd\-logind\&.service
  NAME                DESCRIPTION                              EXPOSURE
✗ PrivateNetwork=     Service has access to the host\*(Aqs network      0\&.5
✗ User=/DynamicUser=  Service runs as root user                     0\&.4
✗ DeviceAllow=        Service has no device ACL                     0\&.2
✓ IPAddressDeny=      Service blocks all IP address ranges
\&.\&.\&.
→ Overall exposure level for systemd\-logind\&.service: 4\&.1 OK 🙂
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze inspect\-elf \fIFILE\fR\&.\&.\&."
.PP
This command will load the specified files, and if they are ELF objects (executables, libraries, core files, etc\&.) it will parse the embedded packaging metadata, if any, and print it in a table or json format\&. See the
\m[blue]\fBPackaging Metadata\fR\m[]\&\s-2\u[1]\d\s+2
documentation for more information\&.
.PP
\fBExample\ \&21.\ \&Print information about a core file as JSON\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze inspect\-elf \-\-json=pretty \e
        core\&.fsverity\&.1000\&.f77dac5dc161402aa44e15b7dd9dcf97\&.58561\&.1637106137000000
{
        "elfType" : "coredump",
        "elfArchitecture" : "AMD x86\-64",
        "/home/bluca/git/fsverity\-utils/fsverity" : {
                "type" : "deb",
                "name" : "fsverity\-utils",
                "version" : "1\&.3\-1",
                "buildId" : "7c895ecd2a271f93e96268f479fdc3c64a2ec4ee"
        },
        "/home/bluca/git/fsverity\-utils/libfsverity\&.so\&.0" : {
                "type" : "deb",
                "name" : "fsverity\-utils",
                "version" : "1\&.3\-1",
                "buildId" : "b5e428254abf14237b0ae70ed85fffbb98a78f88"
        }
}
        
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze fdstore \fIUNIT\fR\&.\&.\&."
.PP
Lists the current contents of the specified service unit\*(Aqs file descriptor store\&. This shows names, inode types, device numbers, inode numbers, paths and open modes of the open file descriptors\&. The specified units must have
\fIFileDescriptorStoreMax=\fR
enabled, see
\fBsystemd.service\fR(5)
for details\&.
.PP
\fBExample\ \&22.\ \&Table output\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze fdstore systemd\-journald\&.service
FDNAME TYPE DEVNO   INODE RDEVNO PATH             FLAGS
stored sock 0:8   4218620 \-      socket:[4218620] ro
stored sock 0:8   4213198 \-      socket:[4213198] ro
stored sock 0:8   4213190 \-      socket:[4213190] ro
\&...
.fi
.if n \{\
.RE
.\}
.PP
Note: the "DEVNO" column refers to the major/minor numbers of the device node backing the file system the file descriptor\*(Aqs inode is on\&. The "RDEVNO" column refers to the major/minor numbers of the device node itself if the file descriptor refers to one\&. Compare with corresponding
\fI\&.st_dev\fR
and
\fI\&.st_rdev\fR
fields in
\fBstruct stat\fR
(see
\fBstat\fR(2)
for details)\&. The listed inode numbers in the "INODE" column are on the file system indicated by "DEVNO"\&.
.SS "systemd\-analyze image\-policy \fIPOLICY\fR\&..."
.PP
This command analyzes the specified image policy string, as per
\fBsystemd.image-policy\fR(7)\&. The policy is normalized and simplified\&. For each currently defined partition identifier (as per the
\m[blue]\fBDiscoverable Partitions Specification\fR\m[]\&\s-2\u[2]\d\s+2) the effect of the image policy string is shown in tabular form\&.
.PP
\fBExample\ \&23.\ \&Example Output\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze image\-policy swap=encrypted:usr=read\-only\-on+verity:root=encrypted
Analyzing policy: root=encrypted:usr=verity+read\-only\-on:swap=encrypted
       Long form: root=encrypted:usr=verity+read\-only\-on:swap=encrypted:=unused+absent

PARTITION       MODE        READ\-ONLY GROWFS
root            encrypted   \-         \-
usr             verity      yes       \-
home            ignore      \-         \-
srv             ignore      \-         \-
esp             ignore      \-         \-
xbootldr        ignore      \-         \-
swap            encrypted   \-         \-
root\-verity     ignore      \-         \-
usr\-verity      unprotected yes       \-
root\-verity\-sig ignore      \-         \-
usr\-verity\-sig  ignore      \-         \-
tmp             ignore      \-         \-
var             ignore      \-         \-
default         ignore      \-         \-
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze pcrs [\fIPCR\fR\&...]"
.PP
This command shows the known TPM2 PCRs along with their identifying names and current values\&.
.PP
\fBExample\ \&24.\ \&Example Output\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze pcrs
NR NAME                SHA256
 0 platform\-code       bcd2eb527108bbb1f5528409bcbe310aa9b74f687854cc5857605993f3d9eb11
 1 platform\-config     b60622856eb7ce52637b80f30a520e6e87c347daa679f3335f4f1a600681bb01
 2 external\-code       1471262403e9a62f9c392941300b4807fbdb6f0bfdd50abfab752732087017dd
 3 external\-config     3d458cfe55cc03ea1f443f1562beec8df51c75e14a9fcf9a7234a13f198e7969
 4 boot\-loader\-code    939f7fa1458e1f7ce968874d908e524fc0debf890383d355e4ce347b7b78a95c
 5 boot\-loader\-config  864c61c5ea5ecbdb6951e6cb6d9c1f4b4eac79772f7fe13b8bece569d83d3768
 6 \-                   3d458cfe55cc03ea1f443f1562beec8df51c75e14a9fcf9a7234a13f198e7969
 7 secure\-boot\-policy  9c905bd9b9891bfb889b90a54c4b537b889cfa817c4389cc25754823a9443255
 8 \-                   0000000000000000000000000000000000000000000000000000000000000000
 9 kernel\-initrd       9caa29b128113ef42aa53d421f03437be57211e5ebafc0fa8b5d4514ee37ff0c
10 ima                 5ea9e3dab53eb6b483b6ec9e3b2c712bea66bca1b155637841216e0094387400
11 kernel\-boot         0000000000000000000000000000000000000000000000000000000000000000
12 kernel\-config       627ffa4b405e911902fe1f1a8b0164693b31acab04f805f15bccfe2209c7eace
13 sysexts             0000000000000000000000000000000000000000000000000000000000000000
14 shim\-policy         0000000000000000000000000000000000000000000000000000000000000000
15 system\-identity     0000000000000000000000000000000000000000000000000000000000000000
16 debug               0000000000000000000000000000000000000000000000000000000000000000
17 \-                   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
18 \-                   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
19 \-                   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
20 \-                   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
21 \-                   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
22 \-                   ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
23 application\-support 0000000000000000000000000000000000000000000000000000000000000000
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze srk [>\fIFILE\fR]"
.PP
This command reads the Storage Root Key (SRK) from the TPM2 device, and writes it in marshalled TPM2B_PUBLIC format to stdout\&. The output is non\-printable data, so it should be redirected to a file or into a pipe\&.
.PP
\fBExample\ \&25.\ \&Save the Storage Root Key to srk\&.tpm2b_public\fR
.sp
.if n \{\
.RS 4
.\}
.nf
systemd\-analyze srk >srk\&.tpm2b_public
.fi
.if n \{\
.RE
.\}
.SS "systemd\-analyze architectures [\fINAME\fR\&.\&.\&.]"
.PP
Lists all known CPU architectures, and which ones are native\&. The listed architecture names are those
\fIConditionArchitecture=\fR
supports, see
\fBsystemd.unit\fR(5)
for details\&. If architecture names are specified only those specified are listed\&.
.PP
\fBExample\ \&26.\ \&Table output\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ systemd\-analyze architectures
NAME        SUPPORT
alpha       foreign
arc         foreign
arc\-be      foreign
arm         foreign
arm64       foreign
\&...
sparc       foreign
sparc64     foreign
tilegx      foreign
x86         secondary
x86\-64      native
.fi
.if n \{\
.RE
.\}
.SH "OPTIONS"
.PP
The following options are understood:
.PP
\fB\-\-system\fR
.RS 4
Operates on the system systemd instance\&. This is the implied default\&.
.sp
Added in version 209\&.
.RE
.PP
\fB\-\-user\fR
.RS 4
Operates on the user systemd instance\&.
.sp
Added in version 186\&.
.RE
.PP
\fB\-\-global\fR
.RS 4
Operates on the system\-wide configuration for user systemd instance\&.
.sp
Added in version 238\&.
.RE
.PP
\fB\-\-order\fR, \fB\-\-require\fR
.RS 4
When used in conjunction with the
\fBdot\fR
command (see above), selects which dependencies are shown in the dependency graph\&. If
\fB\-\-order\fR
is passed, only dependencies of type
\fIAfter=\fR
or
\fIBefore=\fR
are shown\&. If
\fB\-\-require\fR
is passed, only dependencies of type
\fIRequires=\fR,
\fIRequisite=\fR,
\fIBindsTo=\fR,
\fIWants=\fR, and
\fIConflicts=\fR
are shown\&. If neither is passed, this shows dependencies of all these types\&.
.sp
Added in version 198\&.
.RE
.PP
\fB\-\-from\-pattern=\fR, \fB\-\-to\-pattern=\fR
.RS 4
When used in conjunction with the
\fBdot\fR
command (see above), this selects which relationships are shown in the dependency graph\&. Both options require a
\fBglob\fR(7)
pattern as an argument, which will be matched against the left\-hand and the right\-hand, respectively, nodes of a relationship\&.
.sp
Each of these can be used more than once, in which case the unit name must match one of the values\&. When tests for both sides of the relation are present, a relation must pass both tests to be shown\&. When patterns are also specified as positional arguments, they must match at least one side of the relation\&. In other words, patterns specified with those two options will trim the list of edges matched by the positional arguments, if any are given, and fully determine the list of edges shown otherwise\&.
.sp
Added in version 201\&.
.RE
.PP
\fB\-\-fuzz=\fR\fB\fItimespan\fR\fR
.RS 4
When used in conjunction with the
\fBcritical\-chain\fR
command (see above), also show units, which finished
\fItimespan\fR
earlier, than the latest unit in the same level\&. The unit of
\fItimespan\fR
is seconds unless specified with a different unit, e\&.g\&. "50ms"\&.
.sp
Added in version 203\&.
.RE
.PP
\fB\-\-man=no\fR
.RS 4
Do not invoke
\fBman\fR(1)
to verify the existence of man pages listed in
\fIDocumentation=\fR\&.
.sp
Added in version 235\&.
.RE
.PP
\fB\-\-generators\fR
.RS 4
Invoke unit generators, see
\fBsystemd.generator\fR(7)\&. Some generators require root privileges\&. Under a normal user, running with generators enabled will generally result in some warnings\&.
.sp
Added in version 235\&.
.RE
.PP
\fB\-\-recursive\-errors=\fR\fB\fIMODE\fR\fR
.RS 4
Control verification of units and their dependencies and whether
\fBsystemd\-analyze verify\fR
exits with a non\-zero process exit status or not\&. With
\fByes\fR, return a non\-zero process exit status when warnings arise during verification of either the specified unit or any of its associated dependencies\&. With
\fBno\fR, return a non\-zero process exit status when warnings arise during verification of only the specified unit\&. With
\fBone\fR, return a non\-zero process exit status when warnings arise during verification of either the specified unit or its immediate dependencies\&. If this option is not specified, zero is returned as the exit status regardless whether warnings arise during verification or not\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-root=\fR\fB\fIPATH\fR\fR
.RS 4
With
\fBcat\-config\fR,
\fBverify\fR,
\fBcondition\fR
and
\fBsecurity\fR
when used with
\fB\-\-offline=\fR, operate on files underneath the specified root path
\fIPATH\fR\&.
.sp
Added in version 239\&.
.RE
.PP
\fB\-\-image=\fR\fB\fIPATH\fR\fR
.RS 4
With
\fBcat\-config\fR,
\fBverify\fR,
\fBcondition\fR
and
\fBsecurity\fR
when used with
\fB\-\-offline=\fR, operate on files inside the specified image path
\fIPATH\fR\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-image\-policy=\fR\fB\fIpolicy\fR\fR
.RS 4
Takes an image policy string as argument, as per
\fBsystemd.image-policy\fR(7)\&. The policy is enforced when operating on the disk image specified via
\fB\-\-image=\fR, see above\&. If not specified defaults to the
"*"
policy, i\&.e\&. all recognized file systems in the image are used\&.
.RE
.PP
\fB\-\-offline=\fR\fB\fIBOOL\fR\fR
.RS 4
With
\fBsecurity\fR, perform an offline security review of the specified unit files, i\&.e\&. does not have to rely on PID 1 to acquire security information for the files like the
\fBsecurity\fR
verb when used by itself does\&. This means that
\fB\-\-offline=\fR
can be used with
\fB\-\-root=\fR
and
\fB\-\-image=\fR
as well\&. If a unit\*(Aqs overall exposure level is above that set by
\fB\-\-threshold=\fR
(default value is 100),
\fB\-\-offline=\fR
will return an error\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-profile=\fR\fB\fIPATH\fR\fR
.RS 4
With
\fBsecurity\fR
\fB\-\-offline=\fR, takes into consideration the specified portable profile when assessing unit settings\&. The profile can be passed by name, in which case the well\-known system locations will be searched, or it can be the full path to a specific drop\-in file\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-threshold=\fR\fB\fINUMBER\fR\fR
.RS 4
With
\fBsecurity\fR, allow the user to set a custom value to compare the overall exposure level with, for the specified unit files\&. If a unit\*(Aqs overall exposure level, is greater than that set by the user,
\fBsecurity\fR
will return an error\&.
\fB\-\-threshold=\fR
can be used with
\fB\-\-offline=\fR
as well and its default value is 100\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-security\-policy=\fR\fB\fIPATH\fR\fR
.RS 4
With
\fBsecurity\fR, allow the user to define a custom set of requirements formatted as a JSON file against which to compare the specified unit file(s) and determine their overall exposure level to security threats\&.
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&Accepted Assessment Test Identifiers
.TS
allbox tab(:);
lB.
T{
Assessment Test Identifier
T}
.T&
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l
l.
T{
UserOrDynamicUser
T}
T{
SupplementaryGroups
T}
T{
PrivateMounts
T}
T{
PrivateDevices
T}
T{
PrivateTmp
T}
T{
PrivateNetwork
T}
T{
PrivateUsers
T}
T{
ProtectControlGroups
T}
T{
ProtectKernelModules
T}
T{
ProtectKernelTunables
T}
T{
ProtectKernelLogs
T}
T{
ProtectClock
T}
T{
ProtectHome
T}
T{
ProtectHostname
T}
T{
ProtectSystem
T}
T{
RootDirectoryOrRootImage
T}
T{
LockPersonality
T}
T{
MemoryDenyWriteExecute
T}
T{
NoNewPrivileges
T}
T{
CapabilityBoundingSet_CAP_SYS_ADMIN
T}
T{
CapabilityBoundingSet_CAP_SET_UID_GID_PCAP
T}
T{
CapabilityBoundingSet_CAP_SYS_PTRACE
T}
T{
CapabilityBoundingSet_CAP_SYS_TIME
T}
T{
CapabilityBoundingSet_CAP_NET_ADMIN
T}
T{
CapabilityBoundingSet_CAP_SYS_RAWIO
T}
T{
CapabilityBoundingSet_CAP_SYS_MODULE
T}
T{
CapabilityBoundingSet_CAP_AUDIT
T}
T{
CapabilityBoundingSet_CAP_SYSLOG
T}
T{
CapabilityBoundingSet_CAP_SYS_NICE_RESOURCE
T}
T{
CapabilityBoundingSet_CAP_MKNOD
T}
T{
CapabilityBoundingSet_CAP_CHOWN_FSETID_SETFCAP
T}
T{
CapabilityBoundingSet_CAP_DAC_FOWNER_IPC_OWNER
T}
T{
CapabilityBoundingSet_CAP_KILL
T}
T{
CapabilityBoundingSet_CAP_NET_BIND_SERVICE_BROADCAST_RAW
T}
T{
CapabilityBoundingSet_CAP_SYS_BOOT
T}
T{
CapabilityBoundingSet_CAP_MAC
T}
T{
CapabilityBoundingSet_CAP_LINUX_IMMUTABLE
T}
T{
CapabilityBoundingSet_CAP_IPC_LOCK
T}
T{
CapabilityBoundingSet_CAP_SYS_CHROOT
T}
T{
CapabilityBoundingSet_CAP_BLOCK_SUSPEND
T}
T{
CapabilityBoundingSet_CAP_WAKE_ALARM
T}
T{
CapabilityBoundingSet_CAP_LEASE
T}
T{
CapabilityBoundingSet_CAP_SYS_TTY_CONFIG
T}
T{
CapabilityBoundingSet_CAP_BPF
T}
T{
UMask
T}
T{
KeyringMode
T}
T{
ProtectProc
T}
T{
ProcSubset
T}
T{
NotifyAccess
T}
T{
RemoveIPC
T}
T{
Delegate
T}
T{
RestrictRealtime
T}
T{
RestrictSUIDSGID
T}
T{
RestrictNamespaces_user
T}
T{
RestrictNamespaces_mnt
T}
T{
RestrictNamespaces_ipc
T}
T{
RestrictNamespaces_pid
T}
T{
RestrictNamespaces_cgroup
T}
T{
RestrictNamespaces_uts
T}
T{
RestrictNamespaces_net
T}
T{
RestrictAddressFamilies_AF_INET_INET6
T}
T{
RestrictAddressFamilies_AF_UNIX
T}
T{
RestrictAddressFamilies_AF_NETLINK
T}
T{
RestrictAddressFamilies_AF_PACKET
T}
T{
RestrictAddressFamilies_OTHER
T}
T{
SystemCallArchitectures
T}
T{
SystemCallFilter_swap
T}
T{
SystemCallFilter_obsolete
T}
T{
SystemCallFilter_clock
T}
T{
SystemCallFilter_cpu_emulation
T}
T{
SystemCallFilter_debug
T}
T{
SystemCallFilter_mount
T}
T{
SystemCallFilter_module
T}
T{
SystemCallFilter_raw_io
T}
T{
SystemCallFilter_reboot
T}
T{
SystemCallFilter_privileged
T}
T{
SystemCallFilter_resources
T}
T{
IPAddressDeny
T}
T{
DeviceAllow
T}
T{
AmbientCapabilities
T}
.TE
.sp 1
See example "JSON Policy" below\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-json=\fR\fB\fIMODE\fR\fR
.RS 4
With the
\fBsecurity\fR
command, generate a JSON formatted output of the security analysis table\&. The format is a JSON array with objects containing the following fields:
\fIset\fR
which indicates if the setting has been enabled or not,
\fIname\fR
which is what is used to refer to the setting,
\fIjson_field\fR
which is the JSON compatible identifier of the setting,
\fIdescription\fR
which is an outline of the setting state, and
\fIexposure\fR
which is a number in the range 0\&.0\&...10\&.0, where a higher value corresponds to a higher security threat\&. The JSON version of the table is printed to standard output\&. The
\fIMODE\fR
passed to the option can be one of three:
\fBoff\fR
which is the default,
\fBpretty\fR
and
\fBshort\fR
which respectively output a prettified or shorted JSON version of the security table\&. With the
\fBplot\fR
command, generate a JSON formatted output of the raw time data\&. The format is a JSON array with objects containing the following fields:
\fIname\fR
which is the unit name,
\fIactivated\fR
which is the time after startup the service was activated,
\fIactivating\fR
which is how long after startup the service was initially started,
\fItime\fR
which is how long the service took to activate from when it was initially started,
\fIdeactivated\fR
which is the time after startup that the service was deactivated,
\fIdeactivating\fR
which is the time after startup that the service was initially told to deactivate\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-iterations=\fR\fB\fINUMBER\fR\fR
.RS 4
When used with the
\fBcalendar\fR
command, show the specified number of iterations the specified calendar expression will elapse next\&. Defaults to 1\&.
.sp
Added in version 242\&.
.RE
.PP
\fB\-\-base\-time=\fR\fB\fITIMESTAMP\fR\fR
.RS 4
When used with the
\fBcalendar\fR
command, show next iterations relative to the specified point in time\&. If not specified defaults to the current time\&.
.sp
Added in version 244\&.
.RE
.PP
\fB\-\-unit=\fR\fB\fIUNIT\fR\fR
.RS 4
When used with the
\fBcondition\fR
command, evaluate all the
\fICondition*=\&.\&.\&.\fR
and
\fIAssert*=\&.\&.\&.\fR
assignments in the specified unit file\&. The full unit search path is formed by combining the directories for the specified unit with the usual unit load paths\&. The variable
\fI$SYSTEMD_UNIT_PATH\fR
is supported, and may be used to replace or augment the compiled in set of unit load paths; see
\fBsystemd.unit\fR(5)\&. All units files present in the directory containing the specified unit will be used in preference to the other paths\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-table\fR
.RS 4
When used with the
\fBplot\fR
command, the raw time data is output in a table\&.
.sp
Added in version 253\&.
.RE
.PP
\fB\-\-no\-legend\fR
.RS 4
When used with the
\fBplot\fR
command in combination with either
\fB\-\-table\fR
or
\fB\-\-json=\fR, no legends or hints are included in the output\&.
.sp
Added in version 253\&.
.RE
.PP
\fB\-H\fR, \fB\-\-host=\fR
.RS 4
Execute the operation remotely\&. Specify a hostname, or a username and hostname separated by
"@", to connect to\&. The hostname may optionally be suffixed by a port ssh is listening on, separated by
":", and then a container name, separated by
"/", which connects directly to a specific container on the specified host\&. This will use SSH to talk to the remote machine manager instance\&. Container names may be enumerated with
\fBmachinectl \-H \fR\fB\fIHOST\fR\fR\&. Put IPv6 addresses in brackets\&.
.RE
.PP
\fB\-M\fR, \fB\-\-machine=\fR
.RS 4
Execute operation on a local container\&. Specify a container name to connect to, optionally prefixed by a user name to connect as and a separating
"@"
character\&. If the special string
"\&.host"
is used in place of the container name, a connection to the local system is made (which is useful to connect to a specific user\*(Aqs user bus:
"\-\-user \-\-machine=lennart@\&.host")\&. If the
"@"
syntax is not used, the connection is made as root user\&. If the
"@"
syntax is used either the left hand side or the right hand side may be omitted (but not both) in which case the local user name and
"\&.host"
are implied\&.
.RE
.PP
\fB\-q\fR, \fB\-\-quiet\fR
.RS 4
Suppress hints and other non\-essential output\&.
.sp
Added in version 250\&.
.RE
.PP
\fB\-\-tldr\fR
.RS 4
With
\fBcat\-config\fR, only print the "interesting" parts of the configuration files, skipping comments and empty lines and section headers followed only by comments and empty lines\&.
.sp
Added in version 255\&.
.RE
.PP
\fB\-h\fR, \fB\-\-help\fR
.RS 4
Print a short help text and exit\&.
.RE
.PP
\fB\-\-version\fR
.RS 4
Print a short version string and exit\&.
.RE
.PP
\fB\-\-no\-pager\fR
.RS 4
Do not pipe output into a pager\&.
.RE
.SH "EXIT STATUS"
.PP
For most commands, 0 is returned on success, and a non\-zero failure code otherwise\&.
.PP
With the verb
\fBcompare\-versions\fR, in the two\-argument form,
\fB12\fR,
\fB0\fR,
\fB11\fR
is returned if the second version string is respectively larger, equal, or smaller to the first\&. In the three\-argument form,
\fB0\fR
or
\fB1\fR
if the condition is respectively true or false\&.
.SH "ENVIRONMENT"
.PP
\fI$SYSTEMD_LOG_LEVEL\fR
.RS 4
The maximum log level of emitted messages (messages with a higher log level, i\&.e\&. less important ones, will be suppressed)\&. Takes a comma\-separated list of values\&. A value may be either one of (in order of decreasing importance)
\fBemerg\fR,
\fBalert\fR,
\fBcrit\fR,
\fBerr\fR,
\fBwarning\fR,
\fBnotice\fR,
\fBinfo\fR,
\fBdebug\fR, or an integer in the range 0\&...7\&. See
\fBsyslog\fR(3)
for more information\&. Each value may optionally be prefixed with one of
\fBconsole\fR,
\fBsyslog\fR,
\fBkmsg\fR
or
\fBjournal\fR
followed by a colon to set the maximum log level for that specific log target (e\&.g\&.
\fBSYSTEMD_LOG_LEVEL=debug,console:info\fR
specifies to log at debug level except when logging to the console which should be at info level)\&. Note that the global maximum log level takes priority over any per target maximum log levels\&.
.RE
.PP
\fI$SYSTEMD_LOG_COLOR\fR
.RS 4
A boolean\&. If true, messages written to the tty will be colored according to priority\&.
.sp
This setting is only useful when messages are written directly to the terminal, because
\fBjournalctl\fR(1)
and other tools that display logs will color messages based on the log level on their own\&.
.RE
.PP
\fI$SYSTEMD_LOG_TIME\fR
.RS 4
A boolean\&. If true, console log messages will be prefixed with a timestamp\&.
.sp
This setting is only useful when messages are written directly to the terminal or a file, because
\fBjournalctl\fR(1)
and other tools that display logs will attach timestamps based on the entry metadata on their own\&.
.RE
.PP
\fI$SYSTEMD_LOG_LOCATION\fR
.RS 4
A boolean\&. If true, messages will be prefixed with a filename and line number in the source code where the message originates\&.
.sp
Note that the log location is often attached as metadata to journal entries anyway\&. Including it directly in the message text can nevertheless be convenient when debugging programs\&.
.RE
.PP
\fI$SYSTEMD_LOG_TID\fR
.RS 4
A boolean\&. If true, messages will be prefixed with the current numerical thread ID (TID)\&.
.sp
Note that the this information is attached as metadata to journal entries anyway\&. Including it directly in the message text can nevertheless be convenient when debugging programs\&.
.RE
.PP
\fI$SYSTEMD_LOG_TARGET\fR
.RS 4
The destination for log messages\&. One of
\fBconsole\fR
(log to the attached tty),
\fBconsole\-prefixed\fR
(log to the attached tty but with prefixes encoding the log level and "facility", see
\fBsyslog\fR(3),
\fBkmsg\fR
(log to the kernel circular log buffer),
\fBjournal\fR
(log to the journal),
\fBjournal\-or\-kmsg\fR
(log to the journal if available, and to kmsg otherwise),
\fBauto\fR
(determine the appropriate log target automatically, the default),
\fBnull\fR
(disable log output)\&.
.RE
.PP
\fI$SYSTEMD_LOG_RATELIMIT_KMSG\fR
.RS 4
Whether to ratelimit kmsg or not\&. Takes a boolean\&. Defaults to
"true"\&. If disabled, systemd will not ratelimit messages written to kmsg\&.
.RE
.PP
\fI$SYSTEMD_PAGER\fR
.RS 4
Pager to use when
\fB\-\-no\-pager\fR
is not given; overrides
\fI$PAGER\fR\&. If neither
\fI$SYSTEMD_PAGER\fR
nor
\fI$PAGER\fR
are set, a set of well\-known pager implementations are tried in turn, including
\fBless\fR(1)
and
\fBmore\fR(1), until one is found\&. If no pager implementation is discovered no pager is invoked\&. Setting this environment variable to an empty string or the value
"cat"
is equivalent to passing
\fB\-\-no\-pager\fR\&.
.sp
Note: if
\fI$SYSTEMD_PAGERSECURE\fR
is not set,
\fI$SYSTEMD_PAGER\fR
(as well as
\fI$PAGER\fR) will be silently ignored\&.
.RE
.PP
\fI$SYSTEMD_LESS\fR
.RS 4
Override the options passed to
\fBless\fR
(by default
"FRSXMK")\&.
.sp
Users might want to change two options in particular:
.PP
\fBK\fR
.RS 4
This option instructs the pager to exit immediately when
Ctrl+C
is pressed\&. To allow
\fBless\fR
to handle
Ctrl+C
itself to switch back to the pager command prompt, unset this option\&.
.sp
If the value of
\fI$SYSTEMD_LESS\fR
does not include
"K", and the pager that is invoked is
\fBless\fR,
Ctrl+C
will be ignored by the executable, and needs to be handled by the pager\&.
.RE
.PP
\fBX\fR
.RS 4
This option instructs the pager to not send termcap initialization and deinitialization strings to the terminal\&. It is set by default to allow command output to remain visible in the terminal even after the pager exits\&. Nevertheless, this prevents some pager functionality from working, in particular paged output cannot be scrolled with the mouse\&.
.RE
.sp
Note that setting the regular
\fI$LESS\fR
environment variable has no effect for
\fBless\fR
invocations by systemd tools\&.
.sp
See
\fBless\fR(1)
for more discussion\&.
.RE
.PP
\fI$SYSTEMD_LESSCHARSET\fR
.RS 4
Override the charset passed to
\fBless\fR
(by default
"utf\-8", if the invoking terminal is determined to be UTF\-8 compatible)\&.
.sp
Note that setting the regular
\fI$LESSCHARSET\fR
environment variable has no effect for
\fBless\fR
invocations by systemd tools\&.
.RE
.PP
\fI$SYSTEMD_PAGERSECURE\fR
.RS 4
Takes a boolean argument\&. When true, the "secure" mode of the pager is enabled; if false, disabled\&. If
\fI$SYSTEMD_PAGERSECURE\fR
is not set at all, secure mode is enabled if the effective UID is not the same as the owner of the login session, see
\fBgeteuid\fR(2)
and
\fBsd_pid_get_owner_uid\fR(3)\&. In secure mode,
\fBLESSSECURE=1\fR
will be set when invoking the pager, and the pager shall disable commands that open or create new files or start new subprocesses\&. When
\fI$SYSTEMD_PAGERSECURE\fR
is not set at all, pagers which are not known to implement secure mode will not be used\&. (Currently only
\fBless\fR(1)
implements secure mode\&.)
.sp
Note: when commands are invoked with elevated privileges, for example under
\fBsudo\fR(8)
or
\fBpkexec\fR(1), care must be taken to ensure that unintended interactive features are not enabled\&. "Secure" mode for the pager may be enabled automatically as describe above\&. Setting
\fISYSTEMD_PAGERSECURE=0\fR
or not removing it from the inherited environment allows the user to invoke arbitrary commands\&. Note that if the
\fI$SYSTEMD_PAGER\fR
or
\fI$PAGER\fR
variables are to be honoured,
\fI$SYSTEMD_PAGERSECURE\fR
must be set too\&. It might be reasonable to completely disable the pager using
\fB\-\-no\-pager\fR
instead\&.
.RE
.PP
\fI$SYSTEMD_COLORS\fR
.RS 4
Takes a boolean argument\&. When true,
\fBsystemd\fR
and related utilities will use colors in their output, otherwise the output will be monochrome\&. Additionally, the variable can take one of the following special values:
"16",
"256"
to restrict the use of colors to the base 16 or 256 ANSI colors, respectively\&. This can be specified to override the automatic decision based on
\fI$TERM\fR
and what the console is connected to\&.
.RE
.PP
\fI$SYSTEMD_URLIFY\fR
.RS 4
The value must be a boolean\&. Controls whether clickable links should be generated in the output for terminal emulators supporting this\&. This can be specified to override the decision that
\fBsystemd\fR
makes based on
\fI$TERM\fR
and other conditions\&.
.RE
.SH "EXAMPLES"
.PP
\fBExample\ \&27.\ \&JSON Policy\fR
.PP
The JSON file passed as a path parameter to
\fB\-\-security\-policy=\fR
has a top\-level JSON object, with keys being the assessment test identifiers mentioned above\&. The values in the file should be JSON objects with one or more of the following fields:
\fBdescription_na\fR
(string),
\fBdescription_good\fR
(string),
\fBdescription_bad\fR
(string),
\fBweight\fR
(unsigned integer), and
\fBrange\fR
(unsigned integer)\&. If any of these fields corresponding to a specific id of the unit file is missing from the JSON object, the default built\-in field value corresponding to that same id is used for security analysis as default\&. The weight and range fields are used in determining the overall exposure level of the unit files: the value of each setting is assigned a badness score, which is multiplied by the policy weight and divided by the policy range to determine the overall exposure that the setting implies\&. The computed badness is summed across all settings in the unit file, normalized to the 1\&...100 range, and used to determine the overall exposure level of the unit\&. By allowing users to manipulate these fields, the \*(Aqsecurity\*(Aq verb gives them the option to decide for themself which ids are more important and hence should have a greater effect on the exposure level\&. A weight of
"0"
means the setting will not be checked\&.
.sp
.if n \{\
.RS 4
.\}
.nf
{
  "PrivateDevices":
    {
    "description_good": "Service has no access to hardware devices",
    "description_bad": "Service potentially has access to hardware devices",
    "weight": 1000,
    "range": 1
    },
  "PrivateMounts":
    {
    "description_good": "Service cannot install system mounts",
    "description_bad": "Service may install system mounts",
    "weight": 1000,
    "range": 1
    },
  "PrivateNetwork":
    {
    "description_good": "Service has no access to the host\*(Aqs network",
    "description_bad": "Service has access to the host\*(Aqs network",
    "weight": 2500,
    "range": 1
    },
  "PrivateTmp":
    {
    "description_good": "Service has no access to other software\*(Aqs temporary files",
    "description_bad": "Service has access to other software\*(Aqs temporary files",
    "weight": 1000,
    "range": 1
    },
  "PrivateUsers":
    {
    "description_good": "Service does not have access to other users",
    "description_bad": "Service has access to other users",
    "weight": 1000,
    "range": 1
    }
}
      
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1), \fBsystemctl\fR(1)
.SH "NOTES"
.IP " 1." 4
Packaging Metadata
.RS 4
\%https://systemd.io/COREDUMP_PACKAGE_METADATA/
.RE
.IP " 2." 4
Discoverable Partitions Specification
.RS 4
\%https://uapi-group.org/specifications/specs/discoverable_partitions_specification
.RE
