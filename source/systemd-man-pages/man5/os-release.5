'\" t
.TH "OS\-RELEASE" "5" "" "systemd 256.4" "os-release"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
os-release, initrd-release, extension-release \- Operating system identification
.SH "SYNOPSIS"
.PP
.RS 4
/etc/os\-release
.RE
.RS 4
/usr/lib/os\-release
.RE
.RS 4
/etc/initrd\-release
.RE
.RS 4
/usr/lib/extension\-release\&.d/extension\-release\&.\fIIMAGE\fR
.RE
.SH "DESCRIPTION"
.PP
The
/etc/os\-release
and
/usr/lib/os\-release
files contain operating system identification data\&.
.PP
The format of
os\-release
is a newline\-separated list of environment\-like shell\-compatible variable assignments\&. It is possible to source the configuration from Bourne shell scripts, however, beyond mere variable assignments, no shell features are supported (this means variable expansion is explicitly not supported), allowing applications to read the file without implementing a shell compatible execution engine\&. Variable assignment values must be enclosed in double or single quotes if they include spaces, semicolons or other special characters outside of A\(enZ, a\(enz, 0\(en9\&. (Assignments that do not include these special characters may be enclosed in quotes too, but this is optional\&.) Shell special characters ("$", quotes, backslash, backtick) must be escaped with backslashes, following shell style\&. All strings should be in UTF\-8 encoding, and non\-printable characters should not be used\&. Concatenation of multiple individually quoted strings is not supported\&. Lines beginning with "#" are treated as comments\&. Blank lines are permitted and ignored\&.
.PP
The file
/etc/os\-release
takes precedence over
/usr/lib/os\-release\&. Applications should check for the former, and exclusively use its data if it exists, and only fall back to
/usr/lib/os\-release
if it is missing\&. Applications should not read data from both files at the same time\&.
/usr/lib/os\-release
is the recommended place to store OS release information as part of vendor trees\&.
/etc/os\-release
should be a relative symlink to
/usr/lib/os\-release, to provide compatibility with applications only looking at
/etc/\&. A relative symlink instead of an absolute symlink is necessary to avoid breaking the link in a chroot or initrd environment\&.
.PP
os\-release
contains data that is defined by the operating system vendor and should generally not be changed by the administrator\&.
.PP
As this file only encodes names and identifiers it should not be localized\&.
.PP
The
/etc/os\-release
and
/usr/lib/os\-release
files might be symlinks to other files, but it is important that the file is available from earliest boot on, and hence must be located on the root file system\&.
.PP
os\-release
must not contain repeating keys\&. Nevertheless, readers should pick the entries later in the file in case of repeats, similarly to how a shell sourcing the file would\&. A reader may warn about repeating entries\&.
.PP
For a longer rationale for
os\-release
please refer to the
\m[blue]\fBAnnouncement of /etc/os\-release\fR\m[]\&\s-2\u[1]\d\s+2\&.
.SS "/etc/initrd\-release"
.PP
In the
\m[blue]\fBinitrd\fR\m[]\&\s-2\u[2]\d\s+2,
/etc/initrd\-release
plays the same role as
os\-release
in the main system\&. Additionally, the presence of that file means that the system is in the initrd phase\&.
/etc/os\-release
should be symlinked to
/etc/initrd\-release
(or vice versa), so programs that only look for
/etc/os\-release
(as described above) work correctly\&.
.PP
The rest of this document that talks about
os\-release
should be understood to apply to
initrd\-release
too\&.
.SS "/usr/lib/extension\-release\&.d/extension\-release\&.\fIIMAGE\fR"
.PP
/usr/lib/extension\-release\&.d/extension\-release\&.\fIIMAGE\fR
plays the same role for extension images as
os\-release
for the main system, and follows the syntax and rules as described in the
\m[blue]\fBPortable Services\fR\m[]\&\s-2\u[3]\d\s+2
page\&. The purpose of this file is to identify the extension and to allow the operating system to verify that the extension image matches the base OS\&. This is typically implemented by checking that the
\fIID=\fR
options match, and either
\fISYSEXT_LEVEL=\fR
exists and matches too, or if it is not present,
\fIVERSION_ID=\fR
exists and matches\&. This ensures ABI/API compatibility between the layers and prevents merging of an incompatible image in an overlay\&.
.PP
In order to identify the extension image itself, the same fields defined below can be added to the
extension\-release
file with a
\fISYSEXT_\fR
prefix (to disambiguate from fields used to match on the base image)\&. E\&.g\&.:
\fISYSEXT_ID=myext\fR,
\fISYSEXT_VERSION_ID=1\&.2\&.3\fR\&.
.PP
In the
extension\-release\&.\fIIMAGE\fR
filename, the
\fIIMAGE\fR
part must exactly match the file name of the containing image with the suffix removed\&. In case it is not possible to guarantee that an image file name is stable and doesn\*(Aqt change between the build and the deployment phases, it is possible to relax this check: if exactly one file whose name matches
"extension\-release\&.*"
is present in this directory, and the file is tagged with a
\fIuser\&.extension\-release\&.strict\fR
\fBxattr\fR(7)
set to the string
"0", it will be used instead\&.
.PP
The rest of this document that talks about
os\-release
should be understood to apply to
extension\-release
too\&.
.SH "OPTIONS"
.PP
The following OS identifications parameters may be set using
os\-release:
.SS "General information identifying the operating system"
.PP
\fINAME=\fR
.RS 4
A string identifying the operating system, without a version component, and suitable for presentation to the user\&. If not set, a default of
"NAME=Linux"
may be used\&.
.sp
Examples:
"NAME=Fedora",
"NAME="Debian GNU/Linux""\&.
.RE
.PP
\fIID=\fR
.RS 4
A lower\-case string (no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-") identifying the operating system, excluding any version information and suitable for processing by scripts or usage in generated filenames\&. If not set, a default of
"ID=linux"
may be used\&. Note that even though this string may not include characters that require shell quoting, quoting may nevertheless be used\&.
.sp
Examples:
"ID=fedora",
"ID=debian"\&.
.RE
.PP
\fIID_LIKE=\fR
.RS 4
A space\-separated list of operating system identifiers in the same syntax as the
\fIID=\fR
setting\&. It should list identifiers of operating systems that are closely related to the local operating system in regards to packaging and programming interfaces, for example listing one or more OS identifiers the local OS is a derivative from\&. An OS should generally only list other OS identifiers it itself is a derivative of, and not any OSes that are derived from it, though symmetric relationships are possible\&. Build scripts and similar should check this variable if they need to identify the local operating system and the value of
\fIID=\fR
is not recognized\&. Operating systems should be listed in order of how closely the local operating system relates to the listed ones, starting with the closest\&. This field is optional\&.
.sp
Examples: for an operating system with
"ID=centos", an assignment of
"ID_LIKE="rhel fedora""
would be appropriate\&. For an operating system with
"ID=ubuntu", an assignment of
"ID_LIKE=debian"
is appropriate\&.
.RE
.PP
\fIPRETTY_NAME=\fR
.RS 4
A pretty operating system name in a format suitable for presentation to the user\&. May or may not contain a release code name or OS version of some kind, as suitable\&. If not set, a default of
"PRETTY_NAME="Linux""
may be used
.sp
Example:
"PRETTY_NAME="Fedora 17 (Beefy Miracle)""\&.
.RE
.PP
\fICPE_NAME=\fR
.RS 4
A CPE name for the operating system, in URI binding syntax, following the
\m[blue]\fBCommon Platform Enumeration Specification\fR\m[]\&\s-2\u[4]\d\s+2
as proposed by the NIST\&. This field is optional\&.
.sp
Example:
"CPE_NAME="cpe:/o:fedoraproject:fedora:17""
.RE
.PP
\fIVARIANT=\fR
.RS 4
A string identifying a specific variant or edition of the operating system suitable for presentation to the user\&. This field may be used to inform the user that the configuration of this system is subject to a specific divergent set of rules or default configuration settings\&. This field is optional and may not be implemented on all systems\&.
.sp
Examples:
"VARIANT="Server Edition"",
"VARIANT="Smart Refrigerator Edition""\&.
.sp
Note: this field is for display purposes only\&. The
\fIVARIANT_ID\fR
field should be used for making programmatic decisions\&.
.sp
Added in version 220\&.
.RE
.PP
\fIVARIANT_ID=\fR
.RS 4
A lower\-case string (no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-"), identifying a specific variant or edition of the operating system\&. This may be interpreted by other packages in order to determine a divergent default configuration\&. This field is optional and may not be implemented on all systems\&.
.sp
Examples:
"VARIANT_ID=server",
"VARIANT_ID=embedded"\&.
.sp
Added in version 220\&.
.RE
.SS "Information about the version of the operating system"
.PP
\fIVERSION=\fR
.RS 4
A string identifying the operating system version, excluding any OS name information, possibly including a release code name, and suitable for presentation to the user\&. This field is optional\&.
.sp
Examples:
"VERSION=17",
"VERSION="17 (Beefy Miracle)""\&.
.RE
.PP
\fIVERSION_ID=\fR
.RS 4
A lower\-case string (mostly numeric, no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-") identifying the operating system version, excluding any OS name information or release code name, and suitable for processing by scripts or usage in generated filenames\&. This field is optional\&.
.sp
Examples:
"VERSION_ID=17",
"VERSION_ID=11\&.04"\&.
.RE
.PP
\fIVERSION_CODENAME=\fR
.RS 4
A lower\-case string (no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-") identifying the operating system release code name, excluding any OS name information or release version, and suitable for processing by scripts or usage in generated filenames\&. This field is optional and may not be implemented on all systems\&.
.sp
Examples:
"VERSION_CODENAME=buster",
"VERSION_CODENAME=xenial"\&.
.sp
Added in version 231\&.
.RE
.PP
\fIBUILD_ID=\fR
.RS 4
A string uniquely identifying the system image originally used as the installation base\&. In most cases,
\fIVERSION_ID\fR
or
\fIIMAGE_ID\fR+\fIIMAGE_VERSION\fR
are updated when the entire system image is replaced during an update\&.
\fIBUILD_ID\fR
may be used in distributions where the original installation image version is important:
\fIVERSION_ID\fR
would change during incremental system updates, but
\fIBUILD_ID\fR
would not\&. This field is optional\&.
.sp
Examples:
"BUILD_ID="2013\-03\-20\&.3"",
"BUILD_ID=201303203"\&.
.sp
Added in version 200\&.
.RE
.PP
\fIIMAGE_ID=\fR
.RS 4
A lower\-case string (no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-"), identifying a specific image of the operating system\&. This is supposed to be used for environments where OS images are prepared, built, shipped and updated as comprehensive, consistent OS images\&. This field is optional and may not be implemented on all systems, in particularly not on those that are not managed via images but put together and updated from individual packages and on the local system\&.
.sp
Examples:
"IMAGE_ID=vendorx\-cashier\-system",
"IMAGE_ID=netbook\-image"\&.
.sp
Added in version 249\&.
.RE
.PP
\fIIMAGE_VERSION=\fR
.RS 4
A lower\-case string (mostly numeric, no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-") identifying the OS image version\&. This is supposed to be used together with
\fIIMAGE_ID\fR
described above, to discern different versions of the same image\&.
.sp
Examples:
"IMAGE_VERSION=33",
"IMAGE_VERSION=47\&.1rc1"\&.
.sp
Added in version 249\&.
.RE
.PP
To summarize: if the image updates are built and shipped as comprehensive units,
\fIIMAGE_ID\fR+\fIIMAGE_VERSION\fR
is the best fit\&. Otherwise, if updates eventually completely replace previously installed contents, as in a typical binary distribution,
\fIVERSION_ID\fR
should be used to identify major releases of the operating system\&.
\fIBUILD_ID\fR
may be used instead or in addition to
\fIVERSION_ID\fR
when the original system image version is important\&.
.SS "Presentation information and links"
.PP
\fIHOME_URL=\fR, \fIDOCUMENTATION_URL=\fR, \fISUPPORT_URL=\fR, \fIBUG_REPORT_URL=\fR, \fIPRIVACY_POLICY_URL=\fR
.RS 4
Links to resources on the Internet related to the operating system\&.
\fIHOME_URL=\fR
should refer to the homepage of the operating system, or alternatively some homepage of the specific version of the operating system\&.
\fIDOCUMENTATION_URL=\fR
should refer to the main documentation page for this operating system\&.
\fISUPPORT_URL=\fR
should refer to the main support page for the operating system, if there is any\&. This is primarily intended for operating systems which vendors provide support for\&.
\fIBUG_REPORT_URL=\fR
should refer to the main bug reporting page for the operating system, if there is any\&. This is primarily intended for operating systems that rely on community QA\&.
\fIPRIVACY_POLICY_URL=\fR
should refer to the main privacy policy page for the operating system, if there is any\&. These settings are optional, and providing only some of these settings is common\&. These URLs are intended to be exposed in "About this system" UIs behind links with captions such as "About this Operating System", "Obtain Support", "Report a Bug", or "Privacy Policy"\&. The values should be in
\m[blue]\fBRFC3986 format\fR\m[]\&\s-2\u[5]\d\s+2, and should be
"http:"
or
"https:"
URLs, and possibly
"mailto:"
or
"tel:"\&. Only one URL shall be listed in each setting\&. If multiple resources need to be referenced, it is recommended to provide an online landing page linking all available resources\&.
.sp
Examples:
"HOME_URL="https://fedoraproject\&.org/"",
"BUG_REPORT_URL="https://bugzilla\&.redhat\&.com/""\&.
.RE
.PP
\fISUPPORT_END=\fR
.RS 4
The date at which support for this version of the OS ends\&. (What exactly "lack of support" means varies between vendors, but generally users should assume that updates, including security fixes, will not be provided\&.) The value is a date in the ISO 8601 format
"YYYY\-MM\-DD", and specifies the first day on which support
\fIis not\fR
provided\&.
.sp
For example,
"SUPPORT_END=2001\-01\-01"
means that the system was supported until the end of the last day of the previous millennium\&.
.sp
Added in version 252\&.
.RE
.PP
\fILOGO=\fR
.RS 4
A string, specifying the name of an icon as defined by
\m[blue]\fBfreedesktop\&.org Icon Theme Specification\fR\m[]\&\s-2\u[6]\d\s+2\&. This can be used by graphical applications to display an operating system\*(Aqs or distributor\*(Aqs logo\&. This field is optional and may not necessarily be implemented on all systems\&.
.sp
Examples:
"LOGO=fedora\-logo",
"LOGO=distributor\-logo\-opensuse"
.sp
Added in version 240\&.
.RE
.PP
\fIANSI_COLOR=\fR
.RS 4
A suggested presentation color when showing the OS name on the console\&. This should be specified as string suitable for inclusion in the ESC [ m ANSI/ECMA\-48 escape code for setting graphical rendition\&. This field is optional\&.
.sp
Examples:
"ANSI_COLOR="0;31""
for red,
"ANSI_COLOR="1;34""
for light blue, or
"ANSI_COLOR="0;38;2;60;110;180""
for Fedora blue\&.
.RE
.PP
\fIVENDOR_NAME=\fR
.RS 4
The name of the OS vendor\&. This is the name of the organization or company which produces the OS\&. This field is optional\&.
.sp
This name is intended to be exposed in "About this system" UIs or software update UIs when needed to distinguish the OS vendor from the OS itself\&. It is intended to be human readable\&.
.sp
Examples:
"VENDOR_NAME="Fedora Project""
for Fedora Linux,
"VENDOR_NAME="Canonical""
for Ubuntu\&.
.sp
Added in version 254\&.
.RE
.PP
\fIVENDOR_URL=\fR
.RS 4
The homepage of the OS vendor\&. This field is optional\&. The
\fIVENDOR_NAME=\fR
field should be set if this one is, although clients must be robust against either field not being set\&.
.sp
The value should be in
\m[blue]\fBRFC3986 format\fR\m[]\&\s-2\u[5]\d\s+2, and should be
"http:"
or
"https:"
URLs\&. Only one URL shall be listed in the setting\&.
.sp
Examples:
"VENDOR_URL="https://fedoraproject\&.org/"",
"VENDOR_URL="https://canonical\&.com/""\&.
.sp
Added in version 254\&.
.RE
.SS "Distribution\-level defaults and metadata"
.PP
\fIDEFAULT_HOSTNAME=\fR
.RS 4
A string specifying the hostname if
\fBhostname\fR(5)
is not present and no other configuration source specifies the hostname\&. Must be either a single DNS label (a string composed of 7\-bit ASCII lower\-case characters and no spaces or dots, limited to the format allowed for DNS domain name labels), or a sequence of such labels separated by single dots that forms a valid DNS FQDN\&. The hostname must be at most 64 characters, which is a Linux limitation (DNS allows longer names)\&.
.sp
See
\fBorg.freedesktop.hostname1\fR(5)
for a description of how
\fBsystemd-hostnamed.service\fR(8)
determines the fallback hostname\&.
.sp
Added in version 248\&.
.RE
.PP
\fIARCHITECTURE=\fR
.RS 4
A string that specifies which CPU architecture the userspace binaries require\&. The architecture identifiers are the same as for
\fIConditionArchitecture=\fR
described in
\fBsystemd.unit\fR(5)\&. The field is optional and should only be used when just single architecture is supported\&. It may provide redundant information when used in a GPT partition with a GUID type that already encodes the architecture\&. If this is not the case, the architecture should be specified in e\&.g\&., an extension image, to prevent an incompatible host from loading it\&.
.sp
Added in version 252\&.
.RE
.PP
\fISYSEXT_LEVEL=\fR
.RS 4
A lower\-case string (mostly numeric, no spaces or other characters outside of 0\(en9, a\(enz, "\&.", "_" and "\-") identifying the operating system extensions support level, to indicate which extension images are supported\&. See
/usr/lib/extension\-release\&.d/extension\-release\&.\fIIMAGE\fR,
\m[blue]\fBinitrd\fR\m[]\&\s-2\u[2]\d\s+2
and
\fBsystemd-sysext\fR(8)) for more information\&.
.sp
Examples:
"SYSEXT_LEVEL=2",
"SYSEXT_LEVEL=15\&.14"\&.
.sp
Added in version 248\&.
.RE
.PP
\fICONFEXT_LEVEL=\fR
.RS 4
Semantically the same as
\fISYSEXT_LEVEL=\fR
but for confext images\&. See
/etc/extension\-release\&.d/extension\-release\&.\fIIMAGE\fR
for more information\&.
.sp
Examples:
"CONFEXT_LEVEL=2",
"CONFEXT_LEVEL=15\&.14"\&.
.sp
Added in version 254\&.
.RE
.PP
\fISYSEXT_SCOPE=\fR
.RS 4
Takes a space\-separated list of one or more of the strings
"system",
"initrd"
and
"portable"\&. This field is only supported in
extension\-release\&.d/
files and indicates what environments the system extension is applicable to: i\&.e\&. to regular systems, to initrds, or to portable service images\&. If unspecified,
"SYSEXT_SCOPE=system portable"
is implied, i\&.e\&. any system extension without this field is applicable to regular systems and to portable service environments, but not to initrd environments\&.
.sp
Added in version 250\&.
.RE
.PP
\fICONFEXT_SCOPE=\fR
.RS 4
Semantically the same as
\fISYSEXT_SCOPE=\fR
but for confext images\&.
.sp
Added in version 254\&.
.RE
.PP
\fIPORTABLE_PREFIXES=\fR
.RS 4
Takes a space\-separated list of one or more valid prefix match strings for the
\m[blue]\fBPortable Services\fR\m[]\&\s-2\u[3]\d\s+2
logic\&. This field serves two purposes: it is informational, identifying portable service images as such (and thus allowing them to be distinguished from other OS images, such as bootable system images)\&. It is also used when a portable service image is attached: the specified or implied portable service prefix is checked against the list specified here, to enforce restrictions how images may be attached to a system\&.
.sp
Added in version 250\&.
.RE
.SS "Notes"
.PP
If you are using this file to determine the OS or a specific version of it, use the
\fIID\fR
and
\fIVERSION_ID\fR
fields, possibly with
\fIID_LIKE\fR
as fallback for
\fIID\fR\&. When looking for an OS identification string for presentation to the user use the
\fIPRETTY_NAME\fR
field\&.
.PP
Note that operating system vendors may choose not to provide version information, for example to accommodate for rolling releases\&. In this case,
\fIVERSION\fR
and
\fIVERSION_ID\fR
may be unset\&. Applications should not rely on these fields to be set\&.
.PP
Operating system vendors may extend the file format and introduce new fields\&. It is highly recommended to prefix new fields with an OS specific name in order to avoid name clashes\&. Applications reading this file must ignore unknown fields\&.
.PP
Example:
"DEBIAN_BTS="debbugs://bugs\&.debian\&.org/""\&.
.PP
Container and sandbox runtime managers may make the host\*(Aqs identification data available to applications by providing the host\*(Aqs
/etc/os\-release
(if available, otherwise
/usr/lib/os\-release
as a fallback) as
/run/host/os\-release\&.
.SH "EXAMPLES"
.PP
\fBExample\ \&1.\ \&os\-release file for Fedora Workstation\fR
.sp
.if n \{\
.RS 4
.\}
.nf
NAME=Fedora
VERSION="32 (Workstation Edition)"
ID=fedora
VERSION_ID=32
PRETTY_NAME="Fedora 32 (Workstation Edition)"
ANSI_COLOR="0;38;2;60;110;180"
LOGO=fedora\-logo\-icon
CPE_NAME="cpe:/o:fedoraproject:fedora:32"
HOME_URL="https://fedoraproject\&.org/"
DOCUMENTATION_URL="https://docs\&.fedoraproject\&.org/en\-US/fedora/f32/system\-administrators\-guide/"
SUPPORT_URL="https://fedoraproject\&.org/wiki/Communicating_and_getting_help"
BUG_REPORT_URL="https://bugzilla\&.redhat\&.com/"
REDHAT_BUGZILLA_PRODUCT="Fedora"
REDHAT_BUGZILLA_PRODUCT_VERSION=32
REDHAT_SUPPORT_PRODUCT="Fedora"
REDHAT_SUPPORT_PRODUCT_VERSION=32
PRIVACY_POLICY_URL="https://fedoraproject\&.org/wiki/Legal:PrivacyPolicy"
VARIANT="Workstation Edition"
VARIANT_ID=workstation
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&2.\ \&extension\-release file for an extension for Fedora Workstation 32\fR
.sp
.if n \{\
.RS 4
.\}
.nf
ID=fedora
VERSION_ID=32
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&3.\ \&Reading os\-release in sh(1)\fR
.sp
.if n \{\
.RS 4
.\}
.nf
#!/bin/sh \-eu
# SPDX\-License\-Identifier: MIT\-0

test \-e /etc/os\-release && os_release=\*(Aq/etc/os\-release\*(Aq || os_release=\*(Aq/usr/lib/os\-release\*(Aq
\&. "${os_release}"

echo "Running on ${PRETTY_NAME:\-Linux}"

if [ "${ID:\-linux}" = "debian" ] || [ "${ID_LIKE#*debian*}" != "${ID_LIKE}" ]; then
    echo "Looks like Debian!"
fi
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&4.\ \&Reading os\-release in python(1) (versions >= 3\&.10)\fR
.sp
.if n \{\
.RS 4
.\}
.nf
#!/usr/bin/python
# SPDX\-License\-Identifier: MIT\-0

import platform
os_release = platform\&.freedesktop_os_release()

pretty_name = os_release\&.get(\*(AqPRETTY_NAME\*(Aq, \*(AqLinux\*(Aq)
print(f\*(AqRunning on {pretty_name!r}\*(Aq)

if \*(Aqfedora\*(Aq in [os_release\&.get(\*(AqID\*(Aq, \*(Aqlinux\*(Aq),
                *os_release\&.get(\*(AqID_LIKE\*(Aq, \*(Aq\*(Aq)\&.split()]:
    print(\*(AqLooks like Fedora!\*(Aq)
.fi
.if n \{\
.RE
.\}
.PP
See docs for
\m[blue]\fB\fBplatform\&.freedesktop_os_release\fR\fR\m[]\&\s-2\u[7]\d\s+2
for more details\&.
.PP
\fBExample\ \&5.\ \&Reading os\-release in python(1) (any version)\fR
.sp
.if n \{\
.RS 4
.\}
.nf
#!/usr/bin/python
# SPDX\-License\-Identifier: MIT\-0

import ast
import re
import sys

def read_os_release():
    try:
        filename = \*(Aq/etc/os\-release\*(Aq
        f = open(filename)
    except FileNotFoundError:
        filename = \*(Aq/usr/lib/os\-release\*(Aq
        f = open(filename)

    for line_number, line in enumerate(f, start=1):
        line = line\&.rstrip()
        if not line or line\&.startswith(\*(Aq#\*(Aq):
            continue
        m = re\&.match(r\*(Aq([A\-Z][A\-Z_0\-9]+)=(\&.*)\*(Aq, line)
        if m:
            name, val = m\&.groups()
            if val and val[0] in \*(Aq"\e\*(Aq\*(Aq:
                val = ast\&.literal_eval(val)
            yield name, val
        else:
            print(f\*(Aq{filename}:{line_number}: bad line {line!r}\*(Aq,
                  file=sys\&.stderr)

os_release = dict(read_os_release())

pretty_name = os_release\&.get(\*(AqPRETTY_NAME\*(Aq, \*(AqLinux\*(Aq)
print(f\*(AqRunning on {pretty_name!r}\*(Aq)

if \*(Aqdebian\*(Aq in [os_release\&.get(\*(AqID\*(Aq, \*(Aqlinux\*(Aq),
                *os_release\&.get(\*(AqID_LIKE\*(Aq, \*(Aq\*(Aq)\&.split()]:
    print(\*(AqLooks like Debian!\*(Aq)
.fi
.if n \{\
.RE
.\}
.PP
Note that the above version that uses the built\-in implementation is preferred in most cases, and the open\-coded version here is provided for reference\&.
.SH "SEE ALSO"
.PP
\fBsystemd\fR(1), \fBlsb_release\fR(1), \fBhostname\fR(5), \fBmachine-id\fR(5), \fBmachine-info\fR(5)
.SH "NOTES"
.IP " 1." 4
Announcement of /etc/os-release
.RS 4
\%https://0pointer.de/blog/projects/os-release
.RE
.IP " 2." 4
initrd
.RS 4
\%https://docs.kernel.org/admin-guide/initrd.html
.RE
.IP " 3." 4
Portable Services
.RS 4
\%https://systemd.io/PORTABLE_SERVICES
.RE
.IP " 4." 4
Common Platform Enumeration Specification
.RS 4
\%http://scap.nist.gov/specifications/cpe/
.RE
.IP " 5." 4
RFC3986 format
.RS 4
\%https://tools.ietf.org/html/rfc3986
.RE
.IP " 6." 4
freedesktop.org Icon Theme Specification
.RS 4
\%https://standards.freedesktop.org/icon-theme-spec/latest
.RE
.IP " 7." 4

      \fBplatform.freedesktop_os_release\fR
.RS 4
\%https://docs.python.org/3/library/platform.html#platform.freedesktop_os_release
.RE
