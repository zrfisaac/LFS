'\" t
.TH "SYSTEMD\&.LINK" "5" "" "systemd 256.4" "systemd.link"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
systemd.link \- Network device configuration
.SH "SYNOPSIS"
.PP
\fIlink\fR\&.link
.SH "DESCRIPTION"
.PP
A plain ini\-style text file that encodes configuration for matching network devices, used by
\fBsystemd-udevd\fR(8)
and in particular its
\fBnet_setup_link\fR
builtin\&. See
\fBsystemd.syntax\fR(7)
for a general description of the syntax\&.
.PP
The
\&.link
files are read from the files located in the system network directory
/usr/lib/systemd/network
and
/usr/local/lib/systemd/network
\&\s-2\u[1]\d\s+2, the volatile runtime network directory
/run/systemd/network, and the local administration network directory
/etc/systemd/network\&. All configuration files are collectively sorted and processed in alphanumeric order, regardless of the directories in which they live\&. However, files with identical filenames replace each other\&. It is recommended that each filename is prefixed with a number smaller than
"70"
(e\&.g\&.
10\-eth0\&.link)\&. Otherwise, the default
\&.link
files or those generated by
\fBsystemd-network-generator.service\fR(8)
may take precedence over user configured files\&. Files in
/etc/
have the highest priority, files in
/run/
take precedence over files with the same name in
/usr/lib/\&. This can be used to override a system\-supplied link file with a local file if needed\&. As a special case, an empty file (file size 0) or symlink with the same name pointing to
/dev/null
disables the configuration file entirely (it is "masked")\&.
.PP
Along with the link file
foo\&.link, a "drop\-in" directory
foo\&.link\&.d/
may exist\&. All files with the suffix
"\&.conf"
from this directory will be merged in the alphanumeric order and parsed after the main file itself has been parsed\&. This is useful to alter or add configuration settings, without having to modify the main configuration file\&. Each drop\-in file must have appropriate section headers\&.
.PP
In addition to
/etc/systemd/network, drop\-in
"\&.d"
directories can be placed in
/usr/lib/systemd/network
or
/run/systemd/network
directories\&. Drop\-in files in
/etc/
take precedence over those in
/run/
which in turn take precedence over those in
/usr/lib/\&. Drop\-in files under any of these directories take precedence over the main link file wherever located\&.
.PP
The link file contains a [Match] section, which determines if a given link file may be applied to a given device, as well as a [Link] section specifying how the device should be configured\&. The first (in lexical order) of the link files that matches a given device is applied\&. Note that a default file
99\-default\&.link
is shipped by the system\&. Any user\-supplied
\&.link
should hence have a lexically earlier name to be considered at all\&.
.PP
See
\fBudevadm\fR(8)
for diagnosing problems with
\&.link
files\&.
.SH "[MATCH] SECTION OPTIONS"
.PP
A link file is said to match an interface if all matches specified by the [Match] section are satisfied\&. When a link file does not contain valid settings in [Match] section, then the file will match all interfaces and
\fBsystemd\-udevd\fR
warns about that\&. Hint: to avoid the warning and to make it clear that all interfaces shall be matched, add the following:
.sp
.if n \{\
.RS 4
.\}
.nf
OriginalName=*
.fi
.if n \{\
.RE
.\}
.sp
The first (in alphanumeric order) of the link files that matches a given interface is applied, all later files are ignored, even if they match as well\&. The following keys are accepted:
.PP
\fIMACAddress=\fR
.RS 4
A whitespace\-separated list of hardware addresses\&. The acceptable formats are:
.PP
\fBcolon\-delimited hexadecimal\fR
.RS 4
Each field must be one byte\&. E\&.g\&.
"12:34:56:78:90:ab"
or
"AA:BB:CC:DD:EE:FF"\&.
.sp
Added in version 250\&.
.RE
.PP
\fBhyphen\-delimited hexadecimal\fR
.RS 4
Each field must be one byte\&. E\&.g\&.
"12\-34\-56\-78\-90\-ab"
or
"AA\-BB\-CC\-DD\-EE\-FF"\&.
.sp
Added in version 250\&.
.RE
.PP
\fBdot\-delimited hexadecimal\fR
.RS 4
Each field must be two bytes\&. E\&.g\&.
"1234\&.5678\&.90ab"
or
"AABB\&.CCDD\&.EEFF"\&.
.sp
Added in version 250\&.
.RE
.PP
\fBIPv4 address format\fR
.RS 4
E\&.g\&.
"127\&.0\&.0\&.1"
or
"192\&.168\&.0\&.1"\&.
.sp
Added in version 250\&.
.RE
.PP
\fBIPv6 address format\fR
.RS 4
E\&.g\&.
"2001:0db8:85a3::8a2e:0370:7334"
or
"::1"\&.
.sp
Added in version 250\&.
.RE
.sp
The total length of each MAC address must be 4 (for IPv4 tunnel), 6 (for Ethernet), 16 (for IPv6 tunnel), or 20 (for InfiniBand)\&. This option may appear more than once, in which case the lists are merged\&. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset\&. Defaults to unset\&.
.sp
Added in version 211\&.
.RE
.PP
\fIPermanentMACAddress=\fR
.RS 4
A whitespace\-separated list of hardware\*(Aqs permanent addresses\&. While
\fIMACAddress=\fR
matches the device\*(Aqs current MAC address, this matches the device\*(Aqs permanent MAC address, which may be different from the current one\&. Use full colon\-, hyphen\- or dot\-delimited hexadecimal, or IPv4 or IPv6 address format\&. This option may appear more than once, in which case the lists are merged\&. If the empty string is assigned to this option, the list of hardware addresses defined prior to this is reset\&. Defaults to unset\&.
.sp
Added in version 245\&.
.RE
.PP
\fIPath=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the persistent path, as exposed by the udev property
\fIID_PATH\fR\&.
.sp
Added in version 211\&.
.RE
.PP
\fIDriver=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the driver currently bound to the device, as exposed by the udev property
\fIID_NET_DRIVER\fR
of its parent device, or if that is not set, the driver as exposed by
\fBethtool \-i\fR
of the device itself\&. If the list is prefixed with a "!", the test is inverted\&.
.sp
Added in version 211\&.
.RE
.PP
\fIType=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the device type, as exposed by
\fBnetworkctl list\fR\&. If the list is prefixed with a "!", the test is inverted\&. Some valid values are
"ether",
"loopback",
"wlan",
"wwan"\&. Valid types are named either from the udev
"DEVTYPE"
attribute, or
"ARPHRD_"
macros in
linux/if_arp\&.h, so this is not comprehensive\&.
.sp
Added in version 211\&.
.RE
.PP
\fIKind=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the device kind, as exposed by
\fBnetworkctl status \fR\fB\fIINTERFACE\fR\fR
or
\fBip \-d link show \fR\fB\fIINTERFACE\fR\fR\&. If the list is prefixed with a "!", the test is inverted\&. Some valid values are
"bond",
"bridge",
"gre",
"tun",
"veth"\&. Valid kinds are given by netlink\*(Aqs
"IFLA_INFO_KIND"
attribute, so this is not comprehensive\&.
.sp
Added in version 251\&.
.RE
.PP
\fIProperty=\fR
.RS 4
A whitespace\-separated list of udev property names with their values after equals sign ("=")\&. If multiple properties are specified, the test results are ANDed\&. If the list is prefixed with a "!", the test is inverted\&. If a value contains white spaces, then please quote whole key and value pair\&. If a value contains quotation, then please escape the quotation with
"\e"\&.
.sp
Example: if a \&.link file has the following:
.sp
.if n \{\
.RS 4
.\}
.nf
Property=ID_MODEL_ID=9999 "ID_VENDOR_FROM_DATABASE=vendor name" "KEY=with \e"quotation\e""
.fi
.if n \{\
.RE
.\}
.sp
then, the \&.link file matches only when an interface has all the above three properties\&.
.sp
Added in version 243\&.
.RE
.PP
\fIOriginalName=\fR
.RS 4
A whitespace\-separated list of shell\-style globs matching the device name, as exposed by the udev property "INTERFACE"\&. This cannot be used to match on names that have already been changed from userspace\&. Caution is advised when matching on kernel\-assigned names, as they are known to be unstable between reboots\&.
.sp
Added in version 218\&.
.RE
.PP
\fIHost=\fR
.RS 4
Matches against the hostname or machine ID of the host\&. See
\fIConditionHost=\fR
in
\fBsystemd.unit\fR(5)
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 211\&.
.RE
.PP
\fIVirtualization=\fR
.RS 4
Checks whether the system is executed in a virtualized environment and optionally test whether it is a specific implementation\&. See
\fIConditionVirtualization=\fR
in
\fBsystemd.unit\fR(5)
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 211\&.
.RE
.PP
\fIKernelCommandLine=\fR
.RS 4
Checks whether a specific kernel command line option is set\&. See
\fIConditionKernelCommandLine=\fR
in
\fBsystemd.unit\fR(5)
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 211\&.
.RE
.PP
\fIKernelVersion=\fR
.RS 4
Checks whether the kernel version (as reported by
\fBuname \-r\fR) matches a certain expression\&. See
\fIConditionKernelVersion=\fR
in
\fBsystemd.unit\fR(5)
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 237\&.
.RE
.PP
\fICredential=\fR
.RS 4
Checks whether the specified credential was passed to the
systemd\-udevd\&.service
service\&. See
\m[blue]\fBSystem and Service Credentials\fR\m[]\&\s-2\u[2]\d\s+2
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 252\&.
.RE
.PP
\fIArchitecture=\fR
.RS 4
Checks whether the system is running on a specific architecture\&. See
\fIConditionArchitecture=\fR
in
\fBsystemd.unit\fR(5)
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 211\&.
.RE
.PP
\fIFirmware=\fR
.RS 4
Checks whether the system is running on a machine with the specified firmware\&. See
\fIConditionFirmware=\fR
in
\fBsystemd.unit\fR(5)
for details\&. When prefixed with an exclamation mark ("!"), the result is negated\&. If an empty string is assigned, the previously assigned value is cleared\&.
.sp
Added in version 249\&.
.RE
.SH "[LINK] SECTION OPTIONS"
.PP
The [Link] section accepts the following keys:
.PP
\fIDescription=\fR
.RS 4
A description of the device\&.
.sp
Added in version 211\&.
.RE
.PP
\fIProperty=\fR
.RS 4
Set specified udev properties\&. This takes space separated list of key\-value pairs concatenated with equal sign ("=")\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
Property=HOGE=foo BAR=baz
.fi
.if n \{\
.RE
.\}
.sp
This option supports simple specifier expansion, see the Specifiers section below\&. This option can be specified multiple times\&. If an empty string is assigned, then the all previous assignments are cleared\&.
.sp
This setting is useful to configure the
"ID_NET_MANAGED_BY="
property which declares which network management service shall manage the interface, which is respected by systemd\-networkd and others\&. Use
.sp
.if n \{\
.RS 4
.\}
.nf
Property=ID_NET_MANAGED_BY=io\&.systemd\&.Network
.fi
.if n \{\
.RE
.\}
.sp
to declare explicitly that
\fBsystemd\-networkd\fR
shall manage the interface, or set the property to something else to declare explicitly it shall not do so\&. See
\fBsystemd.network\fR(5)
for details how this property is used to match interface names\&.
.sp
Added in version 256\&.
.RE
.PP
\fIImportProperty=\fR
.RS 4
Import specified udev properties from the saved database\&. This takes space separated list of property names\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
ImportProperty=HOGE BAR
.fi
.if n \{\
.RE
.\}
.sp
This option supports simple specifier expansion, see the Specifiers section below\&. This option can be specified multiple times\&. If an empty string is assigned, then the all previous assignments are cleared\&.
.sp
If the same property is also set in
\fIProperty=\fR
in the above, then the imported property value will be overridden by the value specified in
\fIProperty=\fR\&.
.sp
Added in version 256\&.
.RE
.PP
\fIUnsetProperty=\fR
.RS 4
Unset specified udev properties\&. This takes space separated list of property names\&. Example:
.sp
.if n \{\
.RS 4
.\}
.nf
ImportProperty=HOGE BAR
.fi
.if n \{\
.RE
.\}
.sp
This option supports simple specifier expansion, see the Specifiers section below\&. This option can be specified multiple times\&. If an empty string is assigned, then the all previous assignments are cleared\&.
.sp
This setting is applied after
\fIImportProperty=\fR
and
\fIProperty=\fR
are applied\&. Hence, if the same property is specified in
\fIImportProperty=\fR
or
\fIProperty=\fR, then the imported or specified property value will be ignored, and the property will be unset\&.
.sp
Added in version 256\&.
.RE
.PP
\fIAlias=\fR
.RS 4
The
\fIifalias\fR
interface property is set to this value\&.
.sp
Added in version 211\&.
.RE
.PP
\fIMACAddressPolicy=\fR
.RS 4
The policy by which the MAC address should be set\&. The available policies are:
.PP
\fBpersistent\fR
.RS 4
If the hardware has a persistent MAC address, as most hardware should, and if it is used by the kernel, nothing is done\&. Otherwise, a new MAC address is generated which is guaranteed to be the same on every boot for the given machine and the given device, but which is otherwise random\&. This feature depends on ID_NET_NAME_* properties to exist for the link\&. On hardware where these properties are not set, the generation of a persistent MAC address will fail\&.
.sp
Added in version 211\&.
.RE
.PP
\fBrandom\fR
.RS 4
If the kernel is using a random MAC address, nothing is done\&. Otherwise, a new address is randomly generated each time the device appears, typically at boot\&. Either way, the random address will have the
"unicast"
and
"locally administered"
bits set\&.
.sp
Added in version 211\&.
.RE
.PP
\fBnone\fR
.RS 4
Keeps the MAC address assigned by the kernel\&. Or use the MAC address specified in
\fIMACAddress=\fR\&.
.sp
Added in version 227\&.
.RE
.sp
An empty string assignment is equivalent to setting
"none"\&.
.sp
Added in version 211\&.
.RE
.PP
\fIMACAddress=\fR
.RS 4
The interface MAC address to use\&. For this setting to take effect,
\fIMACAddressPolicy=\fR
must either be unset, empty, or
"none"\&.
.sp
Added in version 211\&.
.RE
.PP
\fINamePolicy=\fR
.RS 4
An ordered, space\-separated list of policies by which the interface name should be set\&.
\fINamePolicy=\fR
may be disabled by specifying
\fBnet\&.ifnames=0\fR
on the kernel command line\&. Each of the policies may fail, and the first successful one is used\&. The name is not set directly, but is exported to udev as the property
\fBID_NET_NAME\fR, which is, by default, used by a
\fBudev\fR(7), rule to set
\fINAME\fR\&. The available policies are:
.PP
\fBkernel\fR
.RS 4
If the kernel claims that the name it has set for a device is predictable, then no renaming is performed\&.
.sp
Added in version 216\&.
.RE
.PP
\fBdatabase\fR
.RS 4
The name is set based on entries in the udev\*(Aqs Hardware Database with the key
\fIID_NET_NAME_FROM_DATABASE\fR\&.
.sp
Added in version 211\&.
.RE
.PP
\fBonboard\fR
.RS 4
The name is set based on information given by the firmware for on\-board devices, as exported by the udev property
\fIID_NET_NAME_ONBOARD\fR\&. See
\fBsystemd.net-naming-scheme\fR(7)\&.
.sp
Added in version 211\&.
.RE
.PP
\fBslot\fR
.RS 4
The name is set based on information given by the firmware for hot\-plug devices, as exported by the udev property
\fIID_NET_NAME_SLOT\fR\&. See
\fBsystemd.net-naming-scheme\fR(7)\&.
.sp
Added in version 211\&.
.RE
.PP
\fBpath\fR
.RS 4
The name is set based on the device\*(Aqs physical location, as exported by the udev property
\fIID_NET_NAME_PATH\fR\&. See
\fBsystemd.net-naming-scheme\fR(7)\&.
.sp
Added in version 211\&.
.RE
.PP
\fBmac\fR
.RS 4
The name is set based on the device\*(Aqs persistent MAC address, as exported by the udev property
\fIID_NET_NAME_MAC\fR\&. See
\fBsystemd.net-naming-scheme\fR(7)\&.
.sp
Added in version 211\&.
.RE
.PP
\fBkeep\fR
.RS 4
If the device already had a name given by userspace (as part of creation of the device or a rename), keep it\&.
.sp
Added in version 241\&.
.RE
.sp
Added in version 211\&.
.RE
.PP
\fIName=\fR
.RS 4
The interface name to use\&. This option has lower precedence than
\fINamePolicy=\fR, so for this setting to take effect,
\fINamePolicy=\fR
must either be unset, empty, disabled, or all policies configured there must fail\&. Also see the example below with
"Name=dmz0"\&.
.sp
Note that specifying a name that the kernel might use for another interface (for example
"eth0") is dangerous because the name assignment done by udev will race with the assignment done by the kernel, and only one interface may use the name\&. Depending on the order of operations, either udev or the kernel will win, making the naming unpredictable\&. It is best to use some different prefix, for example
"internal0"/"external0"
or
"lan0"/"lan1"/"lan3"\&.
.sp
Interface names must have a minimum length of 1 character and a maximum length of 15 characters, and may contain any 7bit ASCII character, with the exception of control characters,
":",
"/"
and
"%"\&. While
"\&."
is an allowed character, it\*(Aqs recommended to avoid it when naming interfaces as various tools (such as
\fBresolvconf\fR(1)) use it as separator character\&. Also, fully numeric interface names are not allowed (in order to avoid ambiguity with interface specification by numeric indexes), nor are the special strings
"\&.",
"\&.\&.",
"all"
and
"default"\&.
.sp
Added in version 211\&.
.RE
.PP
\fIAlternativeNamesPolicy=\fR
.RS 4
A space\-separated list of policies by which the interface\*(Aqs alternative names should be set\&. Each of the policies may fail, and all successful policies are used\&. The available policies are
"database",
"onboard",
"slot",
"path", and
"mac"\&. If the kernel does not support the alternative names, then this setting will be ignored\&.
.sp
Added in version 245\&.
.RE
.PP
\fIAlternativeName=\fR
.RS 4
The alternative interface name to use\&. This option can be specified multiple times\&. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect\&. If the kernel does not support the alternative names, then this setting will be ignored\&.
.sp
Alternative interface names may be used to identify interfaces in various tools\&. In contrast to the primary name (as configured with
\fIName=\fR
above) there may be multiple alternative names referring to the same interface\&. Alternative names may have a maximum length of 127 characters, in contrast to the 15 allowed for the primary interface name, but otherwise are subject to the same naming constraints\&.
.sp
Added in version 245\&.
.RE
.PP
\fITransmitQueues=\fR
.RS 4
Specifies the device\*(Aqs number of transmit queues\&. An integer in the range 1\&...4096\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 248\&.
.RE
.PP
\fIReceiveQueues=\fR
.RS 4
Specifies the device\*(Aqs number of receive queues\&. An integer in the range 1\&...4096\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 248\&.
.RE
.PP
\fITransmitQueueLength=\fR
.RS 4
Specifies the transmit queue length of the device in number of packets\&. An unsigned integer in the range 0\&...4294967294\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 248\&.
.RE
.PP
\fIMTUBytes=\fR
.RS 4
The maximum transmission unit in bytes to set for the device\&. The usual suffixes K, M, G are supported and are understood to the base of 1024\&.
.sp
Added in version 211\&.
.RE
.PP
\fIBitsPerSecond=\fR
.RS 4
The speed to set for the device, the value is rounded down to the nearest Mbps\&. The usual suffixes K, M, G are supported and are understood to the base of 1000\&.
.sp
Added in version 211\&.
.RE
.PP
\fIDuplex=\fR
.RS 4
The duplex mode to set for the device\&. The accepted values are
\fBhalf\fR
and
\fBfull\fR\&.
.sp
Added in version 211\&.
.RE
.PP
\fIAutoNegotiation=\fR
.RS 4
Takes a boolean\&. If set to yes, automatic negotiation of transmission parameters is enabled\&. Autonegotiation is a procedure by which two connected ethernet devices choose common transmission parameters, such as speed, duplex mode, and flow control\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Note that if autonegotiation is enabled, speed and duplex settings are read\-only\&. If autonegotiation is disabled, speed and duplex settings are writable if the driver supports multiple link modes\&.
.sp
Added in version 233\&.
.RE
.PP
\fIWakeOnLan=\fR
.RS 4
The Wake\-on\-LAN policy to set for the device\&. Takes the special value
"off"
which disables Wake\-on\-LAN, or space separated list of the following words:
.PP
\fBphy\fR
.RS 4
Wake on PHY activity\&.
.sp
Added in version 211\&.
.RE
.PP
\fBunicast\fR
.RS 4
Wake on unicast messages\&.
.sp
Added in version 235\&.
.RE
.PP
\fBmulticast\fR
.RS 4
Wake on multicast messages\&.
.sp
Added in version 235\&.
.RE
.PP
\fBbroadcast\fR
.RS 4
Wake on broadcast messages\&.
.sp
Added in version 235\&.
.RE
.PP
\fBarp\fR
.RS 4
Wake on ARP\&.
.sp
Added in version 235\&.
.RE
.PP
\fBmagic\fR
.RS 4
Wake on receipt of a magic packet\&.
.sp
Added in version 211\&.
.RE
.PP
\fBsecureon\fR
.RS 4
Enable SecureOn password for MagicPacket\&. Implied when
\fIWakeOnLanPassword=\fR
is specified\&. If specified without
\fIWakeOnLanPassword=\fR
option, then the password is read from the credential
"\fILINK\fR\&.link\&.wol\&.password"
(e\&.g\&.,
"60\-foo\&.link\&.wol\&.password"), and if the credential not found, then read from
"wol\&.password"\&. See
\fIImportCredential=\fR/\fILoadCredential=\fR/\fISetCredential=\fR
in
\fBsystemd.exec\fR(5)
for details\&. The password in the credential, must be 6 bytes in hex format with each byte separated by a colon (":") like an Ethernet MAC address, e\&.g\&.,
"aa:bb:cc:dd:ee:ff"\&.
.sp
Added in version 235\&.
.RE
.sp
Defaults to unset, and the device\*(Aqs default will be used\&. This setting can be specified multiple times\&. If an empty string is assigned, then the all previous assignments are cleared\&.
.sp
Added in version 211\&.
.RE
.PP
\fIWakeOnLanPassword=\fR
.RS 4
Specifies the SecureOn password for MagicPacket\&. Takes an absolute path to a regular file or an
\fBAF_UNIX\fR
stream socket, or the plain password\&. When a path to a regular file is specified, the password is read from it\&. When an
\fBAF_UNIX\fR
stream socket is specified, a connection is made to it and the password is read from it\&. The password must be 6 bytes in hex format with each byte separated by a colon (":") like an Ethernet MAC address, e\&.g\&.,
"aa:bb:cc:dd:ee:ff"\&. This implies
\fIWakeOnLan=secureon\fR\&. Defaults to unset, and the current value will not be changed\&.
.sp
Added in version 250\&.
.RE
.PP
\fIPort=\fR
.RS 4
The port option is used to select the device port\&. The supported values are:
.PP
\fBtp\fR
.RS 4
An Ethernet interface using Twisted\-Pair cable as the medium\&.
.sp
Added in version 234\&.
.RE
.PP
\fBaui\fR
.RS 4
Attachment Unit Interface (AUI)\&. Normally used with hubs\&.
.sp
Added in version 234\&.
.RE
.PP
\fBbnc\fR
.RS 4
An Ethernet interface using BNC connectors and co\-axial cable\&.
.sp
Added in version 234\&.
.RE
.PP
\fBmii\fR
.RS 4
An Ethernet interface using a Media Independent Interface (MII)\&.
.sp
Added in version 234\&.
.RE
.PP
\fBfibre\fR
.RS 4
An Ethernet interface using Optical Fibre as the medium\&.
.sp
Added in version 234\&.
.RE
.sp
Added in version 234\&.
.RE
.PP
\fIAdvertise=\fR
.RS 4
This sets what speeds and duplex modes of operation are advertised for auto\-negotiation\&. This implies
"AutoNegotiation=yes"\&. The supported values are:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&1.\ \&Supported advertise values
.TS
allbox tab(:);
lB lB lB.
T{
Advertise
T}:T{
Speed (Mbps)
T}:T{
Duplex Mode
T}
.T&
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l.
T{
\fB10baset\-full\fR
T}:T{
10
T}:T{
full
T}
T{
\fB10baset1l\-full\fR
T}:T{
10
T}:T{
full
T}
T{
\fB10baset\-half\fR
T}:T{
10
T}:T{
half
T}
T{
\fB100basefx\-full\fR
T}:T{
100
T}:T{
full
T}
T{
\fB100baset\-full\fR
T}:T{
100
T}:T{
full
T}
T{
\fB100baset1\-full\fR
T}:T{
100
T}:T{
full
T}
T{
\fB100basefx\-half\fR
T}:T{
100
T}:T{
half
T}
T{
\fB100baset\-half\fR
T}:T{
100
T}:T{
half
T}
T{
\fB1000basekx\-full\fR
T}:T{
1000
T}:T{
full
T}
T{
\fB1000baset\-full\fR
T}:T{
1000
T}:T{
full
T}
T{
\fB1000baset1\-full\fR
T}:T{
1000
T}:T{
full
T}
T{
\fB1000basex\-full\fR
T}:T{
1000
T}:T{
full
T}
T{
\fB1000baset\-half\fR
T}:T{
1000
T}:T{
half
T}
T{
\fB2500baset\-full\fR
T}:T{
2500
T}:T{
full
T}
T{
\fB2500basex\-full\fR
T}:T{
2500
T}:T{
full
T}
T{
\fB5000baset\-full\fR
T}:T{
5000
T}:T{
full
T}
T{
\fB10000baser\-fec\fR
T}:T{
10000
T}:T{
\ \&
T}
T{
\fB10000basecr\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000baseer\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000basekr\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000basekx4\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000baselr\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000baselrm\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000basesr\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB10000baset\-full\fR
T}:T{
10000
T}:T{
full
T}
T{
\fB20000basekr2\-full\fR
T}:T{
20000
T}:T{
full
T}
T{
\fB20000basemld2\-full\fR
T}:T{
20000
T}:T{
full
T}
T{
\fB25000basecr\-full\fR
T}:T{
25000
T}:T{
full
T}
T{
\fB25000basekr\-full\fR
T}:T{
25000
T}:T{
full
T}
T{
\fB25000basesr\-full\fR
T}:T{
25000
T}:T{
full
T}
T{
\fB40000basecr4\-full\fR
T}:T{
40000
T}:T{
full
T}
T{
\fB40000basekr4\-full\fR
T}:T{
40000
T}:T{
full
T}
T{
\fB40000baselr4\-full\fR
T}:T{
40000
T}:T{
full
T}
T{
\fB40000basesr4\-full\fR
T}:T{
40000
T}:T{
full
T}
T{
\fB50000basecr\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000basecr2\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000basedr\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000basekr\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000basekr2\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000baselr\-er\-fr\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000basesr\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB50000basesr2\-full\fR
T}:T{
50000
T}:T{
full
T}
T{
\fB56000basecr4\-full\fR
T}:T{
56000
T}:T{
full
T}
T{
\fB56000basekr4\-full\fR
T}:T{
56000
T}:T{
full
T}
T{
\fB56000baselr4\-full\fR
T}:T{
56000
T}:T{
full
T}
T{
\fB56000basesr4\-full\fR
T}:T{
56000
T}:T{
full
T}
T{
\fB100000basecr\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basecr2\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basecr4\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basedr\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basedr2\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basekr\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basekr2\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basekr4\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000baselr\-er\-fr\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000baselr2\-er2\-fr2\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000baselr4\-er4\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basesr\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basesr2\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB100000basesr4\-full\fR
T}:T{
100000
T}:T{
full
T}
T{
\fB200000basecr2\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basecr4\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basedr2\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basedr4\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basekr2\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basekr4\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000baselr2\-er2\-fr2\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000baselr4\-er4\-fr4\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basesr2\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB200000basesr4\-full\fR
T}:T{
200000
T}:T{
full
T}
T{
\fB400000basecr4\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basecr8\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basedr4\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basedr8\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basekr4\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basekr8\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000baselr4\-er4\-fr4\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000baselr8\-er8\-fr8\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basesr4\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB400000basesr8\-full\fR
T}:T{
400000
T}:T{
full
T}
T{
\fB800000basecr8\-full\fR
T}:T{
800000
T}:T{
full
T}
T{
\fB800000basedr8\-2\-full\fR
T}:T{
800000
T}:T{
full
T}
T{
\fB800000basedr8\-full\fR
T}:T{
800000
T}:T{
full
T}
T{
\fB800000basekr8\-full\fR
T}:T{
800000
T}:T{
full
T}
T{
\fB800000basesr8\-full\fR
T}:T{
800000
T}:T{
full
T}
T{
\fB800000basevr8\-full\fR
T}:T{
800000
T}:T{
full
T}
T{
\fBasym\-pause\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBaui\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBautonegotiation\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBbackplane\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBbnc\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBfec\-baser\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBfec\-llrs\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBfec\-none\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBfec\-rs\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBfibre\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBmii\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBpause\fR
T}:T{
\ \&
T}:T{
\ \&
T}
T{
\fBtp\fR
T}:T{
\ \&
T}:T{
\ \&
T}
.TE
.sp 1
By default this is unset, i\&.e\&. all possible modes will be advertised\&. This option may be specified more than once, in which case all specified speeds and modes are advertised\&. If the empty string is assigned to this option, the list is reset, and all prior assignments have no effect\&.
.sp
Added in version 240\&.
.RE
.PP
\fIReceiveChecksumOffload=\fR
.RS 4
Takes a boolean\&. If set to true, hardware offload for checksumming of ingress network packets is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 245\&.
.RE
.PP
\fITransmitChecksumOffload=\fR
.RS 4
Takes a boolean\&. If set to true, hardware offload for checksumming of egress network packets is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 245\&.
.RE
.PP
\fITCPSegmentationOffload=\fR
.RS 4
Takes a boolean\&. If set to true, TCP Segmentation Offload (TSO) is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 232\&.
.RE
.PP
\fITCP6SegmentationOffload=\fR
.RS 4
Takes a boolean\&. If set to true, TCP6 Segmentation Offload (tx\-tcp6\-segmentation) is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 235\&.
.RE
.PP
\fIGenericSegmentationOffload=\fR
.RS 4
Takes a boolean\&. If set to true, Generic Segmentation Offload (GSO) is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 232\&.
.RE
.PP
\fIGenericReceiveOffload=\fR
.RS 4
Takes a boolean\&. If set to true, Generic Receive Offload (GRO) is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 232\&.
.RE
.PP
\fIGenericReceiveOffloadHardware=\fR
.RS 4
Takes a boolean\&. If set to true, hardware accelerated Generic Receive Offload (GRO) is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fILargeReceiveOffload=\fR
.RS 4
Takes a boolean\&. If set to true, Large Receive Offload (LRO) is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 232\&.
.RE
.PP
\fIReceivePacketSteeringCPUMask=\fR
.RS 4
Configures Receive Packet Steering (RPS) list of CPUs to which RPS may forward traffic\&. Takes a list of CPU indices or ranges separated by either whitespace or commas\&. Alternatively, takes the special value
"all"
in which will include all available CPUs in the mask\&. CPU ranges are specified by the lower and upper CPU indices separated by a dash (e\&.g\&.
"2\-6")\&. This option may be specified more than once, in which case the specified CPU affinity masks are merged\&. If an empty string is assigned, the mask is reset, all assignments prior to this will have no effect\&. Defaults to unset and RPS CPU list is unchanged\&. To disable RPS when it was previously enabled, use the special value
"disable"\&.
.sp
Added in version 256\&.
.RE
.PP
\fIReceiveVLANCTAGHardwareAcceleration=\fR
.RS 4
Takes a boolean\&. If set to true, receive VLAN CTAG hardware acceleration is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fITransmitVLANCTAGHardwareAcceleration=\fR
.RS 4
Takes a boolean\&. If set to true, transmit VLAN CTAG hardware acceleration is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fIReceiveVLANCTAGFilter=\fR
.RS 4
Takes a boolean\&. If set to true, receive filtering on VLAN CTAGs is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fITransmitVLANSTAGHardwareAcceleration=\fR
.RS 4
Takes a boolean\&. If set to true, transmit VLAN STAG hardware acceleration is enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fINTupleFilter=\fR
.RS 4
Takes a boolean\&. If set to true, receive N\-tuple filters and actions are enabled\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fIRxChannels=\fR, \fITxChannels=\fR, \fIOtherChannels=\fR, \fICombinedChannels=\fR
.RS 4
Specifies the number of receive, transmit, other, or combined channels, respectively\&. Takes an unsigned integer in the range 1\&...4294967295 or
"max"\&. If set to
"max", the advertised maximum value of the hardware will be used\&. When unset, the number will not be changed\&. Defaults to unset\&.
.sp
Added in version 239\&.
.RE
.PP
\fIRxBufferSize=\fR, \fIRxMiniBufferSize=\fR, \fIRxJumboBufferSize=\fR, \fITxBufferSize=\fR
.RS 4
Specifies the maximum number of pending packets in the NIC receive buffer, mini receive buffer, jumbo receive buffer, or transmit buffer, respectively\&. Takes an unsigned integer in the range 1\&...4294967295 or
"max"\&. If set to
"max", the advertised maximum value of the hardware will be used\&. When unset, the number will not be changed\&. Defaults to unset\&.
.sp
Added in version 244\&.
.RE
.PP
\fIRxFlowControl=\fR
.RS 4
Takes a boolean\&. When set, enables receive flow control, also known as the ethernet receive PAUSE message (generate and send ethernet PAUSE frames)\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 246\&.
.RE
.PP
\fITxFlowControl=\fR
.RS 4
Takes a boolean\&. When set, enables transmit flow control, also known as the ethernet transmit PAUSE message (respond to received ethernet PAUSE frames)\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 246\&.
.RE
.PP
\fIAutoNegotiationFlowControl=\fR
.RS 4
Takes a boolean\&. When set, auto negotiation enables the interface to exchange state advertisements with the connected peer so that the two devices can agree on the ethernet PAUSE configuration\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 246\&.
.RE
.PP
\fIGenericSegmentOffloadMaxBytes=\fR
.RS 4
Specifies the maximum size of a Generic Segment Offload (GSO) packet the device should accept\&. The usual suffixes K, M, G are supported and are understood to the base of 1024\&. An unsigned integer in the range 1\&...65536\&. Defaults to unset\&.
.sp
Added in version 248\&.
.RE
.PP
\fIGenericSegmentOffloadMaxSegments=\fR
.RS 4
Specifies the maximum number of Generic Segment Offload (GSO) segments the device should accept\&. An unsigned integer in the range 1\&...65535\&. Defaults to unset\&.
.sp
Added in version 248\&.
.RE
.PP
\fIUseAdaptiveRxCoalesce=\fR, \fIUseAdaptiveTxCoalesce=\fR
.RS 4
Boolean properties that, when set, enable/disable adaptive Rx/Tx coalescing if the hardware supports it\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fIRxCoalesceSec=\fR, \fIRxCoalesceIrqSec=\fR, \fIRxCoalesceLowSec=\fR, \fIRxCoalesceHighSec=\fR, \fITxCoalesceSec=\fR, \fITxCoalesceIrqSec=\fR, \fITxCoalesceLowSec=\fR, \fITxCoalesceHighSec=\fR
.RS 4
These properties configure the delay before Rx/Tx interrupts are generated after a packet is sent/received\&. The
"Irq"
properties come into effect when the host is servicing an IRQ\&. The
"Low"
and
"High"
properties come into effect when the packet rate drops below the low packet rate threshold or exceeds the high packet rate threshold respectively if adaptive Rx/Tx coalescing is enabled\&. When unset, the kernel\*(Aqs defaults will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fIRxMaxCoalescedFrames=\fR, \fIRxMaxCoalescedIrqFrames=\fR, \fIRxMaxCoalescedLowFrames=\fR, \fIRxMaxCoalescedHighFrames=\fR, \fITxMaxCoalescedFrames=\fR, \fITxMaxCoalescedIrqFrames=\fR, \fITxMaxCoalescedLowFrames=\fR, \fITxMaxCoalescedHighFrames=\fR
.RS 4
These properties configure the maximum number of frames that are sent/received before a Rx/Tx interrupt is generated\&. The
"Irq"
properties come into effect when the host is servicing an IRQ\&. The
"Low"
and
"High"
properties come into effect when the packet rate drops below the low packet rate threshold or exceeds the high packet rate threshold respectively if adaptive Rx/Tx coalescing is enabled\&. When unset, the kernel\*(Aqs defaults will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fICoalescePacketRateLow=\fR, \fICoalescePacketRateHigh=\fR
.RS 4
These properties configure the low and high packet rate (expressed in packets per second) threshold respectively and are used to determine when the corresponding coalescing settings for low and high packet rates come into effect if adaptive Rx/Tx coalescing is enabled\&. If unset, the kernel\*(Aqs defaults will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fICoalescePacketRateSampleIntervalSec=\fR
.RS 4
Configures how often to sample the packet rate used for adaptive Rx/Tx coalescing\&. This property cannot be zero\&. This lowest time granularity supported by this property is seconds\&. Partial seconds will be rounded up before being passed to the kernel\&. If unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fIStatisticsBlockCoalesceSec=\fR
.RS 4
How long to delay driver in\-memory statistics block updates\&. If the driver does not have an in\-memory statistic block, this property is ignored\&. This property cannot be zero\&. If unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 250\&.
.RE
.PP
\fIMDI=\fR
.RS 4
Specifies the medium dependent interface (MDI) mode for the interface\&. A MDI describes the interface from a physical layer implementation to the physical medium used to carry the transmission\&. Takes one of the following words:
"straight"
(or equivalently:
"mdi"),
"crossover"
(or equivalently:
"mdi\-x",
"mdix"), and
"auto"\&. When
"straight", the MDI straight through mode will be used\&. When
"crossover", the MDI crossover (MDI\-X) mode will be used\&. When
"auto", the MDI status is automatically detected\&. Defaults to unset, and the kernel\*(Aqs default will be used\&.
.sp
Added in version 251\&.
.RE
.PP
\fISR\-IOVVirtualFunctions=\fR
.RS 4
Specifies the number of SR\-IOV virtual functions\&. Takes an integer in the range 0\&...2147483647\&. Defaults to unset, and automatically determined from the values specified in the
\fIVirtualFunction=\fR
settings in the [SR\-IOV] sections\&.
.sp
Added in version 251\&.
.RE
.SH "[SR\-IOV] SECTION OPTIONS"
.PP
The [SR\-IOV] section accepts the following keys\&. Specify several [SR\-IOV] sections to configure several SR\-IOVs\&. SR\-IOV provides the ability to partition a single physical PCI resource into virtual PCI functions which can then be injected into a VM\&. In the case of network VFs, SR\-IOV improves north\-south network performance (that is, traffic with endpoints outside the host machine) by allowing traffic to bypass the host machine\(cqs network stack\&.
.PP
\fIVirtualFunction=\fR
.RS 4
Specifies a Virtual Function (VF), lightweight PCIe function designed solely to move data in and out\&. Takes an integer in the range 0\&...2147483646\&. This option is compulsory\&.
.sp
Added in version 251\&.
.RE
.PP
\fIVLANId=\fR
.RS 4
Specifies VLAN ID of the virtual function\&. Takes an integer in the range 1\&...4095\&.
.sp
Added in version 251\&.
.RE
.PP
\fIQualityOfService=\fR
.RS 4
Specifies quality of service of the virtual function\&. Takes an integer in the range 1\&...4294967294\&.
.sp
Added in version 251\&.
.RE
.PP
\fIVLANProtocol=\fR
.RS 4
Specifies VLAN protocol of the virtual function\&. Takes
"802\&.1Q"
or
"802\&.1ad"\&.
.sp
Added in version 251\&.
.RE
.PP
\fIMACSpoofCheck=\fR
.RS 4
Takes a boolean\&. Controls the MAC spoof checking\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 251\&.
.RE
.PP
\fIQueryReceiveSideScaling=\fR
.RS 4
Takes a boolean\&. Toggle the ability of querying the receive side scaling (RSS) configuration of the virtual function (VF)\&. The VF RSS information like RSS hash key may be considered sensitive on some devices where this information is shared between VF and the physical function (PF)\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 251\&.
.RE
.PP
\fITrust=\fR
.RS 4
Takes a boolean\&. Allows one to set trust mode of the virtual function (VF)\&. When set, VF users can set a specific feature which may impact security and/or performance\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 251\&.
.RE
.PP
\fILinkState=\fR
.RS 4
Allows one to set the link state of the virtual function (VF)\&. Takes a boolean or a special value
"auto"\&. Setting to
"auto"
means a reflection of the physical function (PF) link state,
"yes"
lets the VF to communicate with other VFs on this host even if the PF link state is down,
"no"
causes the hardware to drop any packets sent by the VF\&. When unset, the kernel\*(Aqs default will be used\&.
.sp
Added in version 251\&.
.RE
.PP
\fIMACAddress=\fR
.RS 4
Specifies the MAC address for the virtual function\&.
.sp
Added in version 251\&.
.RE
.SH "SPECIFIERS"
.PP
Some settings resolve specifiers which may be used to write generic unit files referring to runtime or unit parameters that are replaced when the unit files are loaded\&. Specifiers must be known and resolvable for the setting to be valid\&. The following specifiers are understood:
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
.B Table\ \&2.\ \&Specifiers available in unit files
.TS
allbox tab(:);
lB lB lB.
T{
Specifier
T}:T{
Meaning
T}:T{
Details
T}
.T&
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l
l l l.
T{
"%a"
T}:T{
Architecture
T}:T{
A short string identifying the architecture of the local system\&. A string such as \fBx86\fR, \fBx86\-64\fR or \fBarm64\fR\&. See the architectures defined for \fIConditionArchitecture=\fR in \fBsystemd.unit\fR(5) for a full list\&.
T}
T{
"%A"
T}:T{
Operating system image version
T}:T{
The operating system image version identifier of the running system, as read from the \fIIMAGE_VERSION=\fR field of /etc/os\-release\&. If not set, resolves to an empty string\&. See \fBos-release\fR(5) for more information\&.
T}
T{
"%b"
T}:T{
Boot ID
T}:T{
The boot ID of the running system, formatted as string\&. See \fBrandom\fR(4) for more information\&.
T}
T{
"%B"
T}:T{
Operating system build ID
T}:T{
The operating system build identifier of the running system, as read from the \fIBUILD_ID=\fR field of /etc/os\-release\&. If not set, resolves to an empty string\&. See \fBos-release\fR(5) for more information\&.
T}
T{
"%H"
T}:T{
Host name
T}:T{
The hostname of the running system\&.
T}
T{
"%l"
T}:T{
Short host name
T}:T{
The hostname of the running system, truncated at the first dot to remove any domain component\&.
T}
T{
"%m"
T}:T{
Machine ID
T}:T{
The machine ID of the running system, formatted as string\&. See \fBmachine-id\fR(5) for more information\&.
T}
T{
"%M"
T}:T{
Operating system image identifier
T}:T{
The operating system image identifier of the running system, as read from the \fIIMAGE_ID=\fR field of /etc/os\-release\&. If not set, resolves to an empty string\&. See \fBos-release\fR(5) for more information\&.
T}
T{
"%o"
T}:T{
Operating system ID
T}:T{
The operating system identifier of the running system, as read from the \fIID=\fR field of /etc/os\-release\&. See \fBos-release\fR(5) for more information\&.
T}
T{
"%q"
T}:T{
Pretty host name
T}:T{
The pretty hostname of the running system, as read from the \fIPRETTY_HOSTNAME=\fR field of /etc/machine\-info\&. If not set, resolves to the short hostname\&. See \fBmachine-info\fR(5) for more information\&.
T}
T{
"%T"
T}:T{
Directory for temporary files
T}:T{
This is either /tmp or the path "$TMPDIR", "$TEMP" or "$TMP" are set to\&. (Note that the directory may be specified without a trailing slash\&.)
T}
T{
"%v"
T}:T{
Kernel release
T}:T{
Identical to \fBuname \-r\fR output\&.
T}
T{
"%V"
T}:T{
Directory for larger and persistent temporary files
T}:T{
This is either /var/tmp or the path "$TMPDIR", "$TEMP" or "$TMP" are set to\&. (Note that the directory may be specified without a trailing slash\&.)
T}
T{
"%w"
T}:T{
Operating system version ID
T}:T{
The operating system version identifier of the running system, as read from the \fIVERSION_ID=\fR field of /etc/os\-release\&. If not set, resolves to an empty string\&. See \fBos-release\fR(5) for more information\&.
T}
T{
"%W"
T}:T{
Operating system variant ID
T}:T{
The operating system variant identifier of the running system, as read from the \fIVARIANT_ID=\fR field of /etc/os\-release\&. If not set, resolves to an empty string\&. See \fBos-release\fR(5) for more information\&.
T}
.TE
.sp 1
.SH "EXAMPLES"
.PP
\fBExample\ \&1.\ \&/usr/lib/systemd/network/99\-default\&.link\fR
.PP
The link file
99\-default\&.link
that is shipped with systemd defines the default policies for the interface name, alternative names, and MAC address of links\&.
.sp
.if n \{\
.RS 4
.\}
.nf
[Match]
OriginalName=*

[Link]
NamePolicy=keep kernel database onboard slot path
AlternativeNamesPolicy=database onboard slot path
MACAddressPolicy=persistent
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&2.\ \&/etc/systemd/network/10\-dmz\&.link\fR
.PP
This example assigns the fixed name
"dmz0"
to the interface with the MAC address 00:a0:de:63:7a:e6:
.sp
.if n \{\
.RS 4
.\}
.nf
[Match]
MACAddress=00:a0:de:63:7a:e6

[Link]
Name=dmz0
.fi
.if n \{\
.RE
.\}
.PP
\fINamePolicy=\fR
is not set, so
\fIName=\fR
takes effect\&. We use the
"10\-"
prefix to order this file early in the list\&. Note that it needs to be before
99\-default\&.link, i\&.e\&. it needs a numerical prefix, to have any effect at all\&.
.PP
\fBExample\ \&3.\ \&(Re\-)applying a \&.link file to an interface\fR
.PP
After a new \&.link file has been created, or an existing \&.link file modified, the new settings may be applied to the matching interface with the following commands:
.sp
.if n \{\
.RS 4
.\}
.nf
$ sudo udevadm control \-\-reload
$ sudo ip link set eth0 down
$ sudo udevadm trigger \-\-verbose \-\-settle \-\-action add /sys/class/net/eth0
.fi
.if n \{\
.RE
.\}
.PP
You may also need to stop the service that manages the network interface, e\&.g\&.
\fBsystemd-networkd.service\fR(8)
or
NetworkManager\&.service
before the above operation, and then restart the service after that\&. For more details about
\fBudevadm\fR
command, see
\fBudevadm\fR(8)\&.
.PP
\fBExample\ \&4.\ \&Debugging \fINamePolicy=\fR assignments\fR
.sp
.if n \{\
.RS 4
.\}
.nf
$ sudo SYSTEMD_LOG_LEVEL=debug udevadm test\-builtin net_setup_link /sys/class/net/hub0
\&...
Parsed configuration file /usr/lib/systemd/network/99\-default\&.link
Parsed configuration file /etc/systemd/network/10\-eth0\&.link
ID_NET_DRIVER=cdc_ether
Config file /etc/systemd/network/10\-eth0\&.link applies to device hub0
link_config: autonegotiation is unset or enabled, the speed and duplex are not writable\&.
hub0: Device has name_assign_type=4
Using default interface naming scheme \*(Aqv240\*(Aq\&.
hub0: Policies didn\*(Aqt yield a name, using specified Name=hub0\&.
ID_NET_LINK_FILE=/etc/systemd/network/10\-eth0\&.link
ID_NET_NAME=hub0
\&...
.fi
.if n \{\
.RE
.\}
.PP
Explicit
\fIName=\fR
configuration wins in this case\&.
.sp
.if n \{\
.RS 4
.\}
.nf
sudo SYSTEMD_LOG_LEVEL=debug udevadm test\-builtin net_setup_link /sys/class/net/enp0s31f6
\&...
Parsed configuration file /usr/lib/systemd/network/99\-default\&.link
Parsed configuration file /etc/systemd/network/10\-eth0\&.link
Created link configuration context\&.
ID_NET_DRIVER=e1000e
Config file /usr/lib/systemd/network/99\-default\&.link applies to device enp0s31f6
link_config: autonegotiation is unset or enabled, the speed and duplex are not writable\&.
enp0s31f6: Device has name_assign_type=4
Using default interface naming scheme \*(Aqv240\*(Aq\&.
enp0s31f6: Policy *keep*: keeping existing userspace name
enp0s31f6: Device has addr_assign_type=0
enp0s31f6: MAC on the device already matches policy *persistent*
ID_NET_LINK_FILE=/usr/lib/systemd/network/99\-default\&.link
\&...
.fi
.if n \{\
.RE
.\}
.PP
In this case, the interface was already renamed, so the
\fBkeep\fR
policy specified as the first option in
99\-default\&.link
means that the existing name is preserved\&. If
\fBkeep\fR
was removed, or if were in boot before the renaming has happened, we might get the following instead:
.sp
.if n \{\
.RS 4
.\}
.nf
enp0s31f6: Policy *path* yields "enp0s31f6"\&.
enp0s31f6: Device has addr_assign_type=0
enp0s31f6: MAC on the device already matches policy *persistent*
ID_NET_LINK_FILE=/usr/lib/systemd/network/99\-default\&.link
ID_NET_NAME=enp0s31f6
\&...
.fi
.if n \{\
.RE
.\}
.PP
Please note that the details of output are subject to change\&.
.PP
\fBExample\ \&5.\ \&/etc/systemd/network/10\-internet\&.link\fR
.PP
This example assigns the fixed name
"internet0"
to the interface with the device path
"pci\-0000:00:1a\&.0\-*":
.sp
.if n \{\
.RS 4
.\}
.nf
[Match]
Path=pci\-0000:00:1a\&.0\-*

[Link]
Name=internet0
.fi
.if n \{\
.RE
.\}
.PP
\fBExample\ \&6.\ \&/etc/systemd/network/25\-wireless\&.link\fR
.PP
Here\*(Aqs an overly complex example that shows the use of a large number of [Match] and [Link] settings\&.
.sp
.if n \{\
.RS 4
.\}
.nf
[Match]
MACAddress=12:34:56:78:9a:bc
Driver=brcmsmac
Path=pci\-0000:02:00\&.0\-*
Type=wlan
Virtualization=no
Host=my\-laptop
Architecture=x86\-64

[Link]
Name=wireless0
MTUBytes=1450
BitsPerSecond=10M
WakeOnLan=magic
MACAddress=cb:a9:87:65:43:21
.fi
.if n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd-udevd.service\fR(8), \fBudevadm\fR(8), \fBsystemd.netdev\fR(5), \fBsystemd.network\fR(5), \fBsystemd-network-generator.service\fR(8)
.SH "NOTES"
.IP " 1." 4
💣💥🧨💥💥💣 Please note that those configuration files must be available at all times. If
/usr/local/
is a separate partition, it may not be available during early boot, and must not be used for configuration.
.IP " 2." 4
System and Service Credentials
.RS 4
\%https://systemd.io/CREDENTIALS
.RE
