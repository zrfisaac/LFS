#!/bin/bash

#
# Copyright (C) 2007 Karel Zak <kzak@redhat.com>
#
# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
TS_TOPDIR="${0%/*}/../.."
TS_DESC="call mount.<type>"
MOUNTER="/sbin/mount.mytest"

. "$TS_TOPDIR"/functions.sh
ts_init "$*"

ts_check_test_command "$TS_CMD_MOUNT"
ts_check_test_command "$TS_CMD_UMOUNT"

ts_skip_nonroot

cat > $MOUNTER <<\EOF
#!/bin/bash
# This util-linux regression test component
# It's safe to remove me...
#
echo "$0 called with \"$*\""
EOF
chmod +x $MOUNTER

ts_init_subtest "basic"
$TS_CMD_MOUNT -t mytest /foo /bar &> $TS_OUTPUT
ts_finalize_subtest

ts_init_subtest "options"
$TS_CMD_MOUNT -t mytest -o foo,defaults /foo /bar &> $TS_OUTPUT
ts_finalize_subtest

ts_init_subtest "multi-types"
$TS_CMD_MOUNT -t mytest,invalid /foo /bar &> $TS_OUTPUT
ts_finalize_subtest

ts_init_subtest "user"
$TS_CMD_MOUNT -t mytest -ouser,abc /foo /bar &> $TS_OUTPUT
ts_finalize_subtest

ts_init_subtest "username"
$TS_CMD_MOUNT -t mytest -ouser=name,abc /foo /bar &> $TS_OUTPUT
ts_finalize_subtest


ts_init_subtest "missing-options"

grep -q 'nodev[[:space:]]*tmpfs' /proc/filesystems
if [ "$?" == "0" ]; then
cat > $MOUNTER <<EOF
#!/bin/bash
# This util-linux regression test component
# It's safe to remove me...
#
exec $TS_CMD_MOUNT -t tmpfs -i "\$1" "\$2" -o x-foo=123
EOF
	chmod +x $MOUNTER

	mountpoint="$TS_OUTDIR/mnt"
	mkdir -p "$mountpoint"
	export LIBMOUNT_UTAB=$TS_OUTDIR/utab
	rm -f $LIBMOUNT_UTAB
	echo -n "" > $LIBMOUNT_UTAB

	$TS_CMD_MOUNT -t mytest -o x-bar=BAR /foo "$mountpoint" &> $TS_OUTPUT
	udevadm settle

	grep -q "$mountpoint" /proc/mounts
	if [ "$?" == "0" ]; then
		cat "$LIBMOUNT_UTAB" \
			| grep "$mountpoint" \
			| sed -e "s|$mountpoint|/mountpoint|g" \
			      -e 's/ID=[[:digit:]]* //g' \
			&> $TS_OUTPUT
		$TS_CMD_UMOUNT "$mountpoint"
		unset LIBMOUNT_UTAB
		rm -f $MOUNTER
		ts_finalize_subtest
	else
		ts_skip_subtest "tmpfs not mounted"
	fi
else
	ts_skip_subtest "tmpfs unsupported"
fi

ts_finalize
