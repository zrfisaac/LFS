#!/bin/bash
#
# Copyright (C) 2023 Masatake YAMATO <yamato@redhat.com>
#
# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
TS_TOPDIR="${0%/*}/../.."
TS_DESC="timerfd associating alarm"

. "$TS_TOPDIR"/functions.sh
ts_init "$*"

ts_skip_capability WAKE_ALARM

ts_check_test_command "$TS_CMD_LSFD"
ts_check_test_command "$TS_HELPER_MKFDS"

ts_cd "$TS_OUTDIR"

PID=
FD=3
EXPR='(FD == '"$FD"')'

{
    for clock in realtime-alarm  boottime-alarm; do
	coproc MKFDS { "$TS_HELPER_MKFDS" timerfd $FD clockid=$clock remaining=0 interval=0 interval-nanofrac=0; }
	if read -u ${MKFDS[0]} PID; then
	    ${TS_CMD_LSFD} -p "${PID}" -n -o ASSOC,TYPE,NAME -Q "${EXPR}"
	    echo 'ASSOC,TYPE,NAME': $?

	    ${TS_CMD_LSFD} -p "${PID}" -n -o TIMERFD.CLOCKID -Q "${EXPR}"
	    echo 'CLOCKID': $?

	    ${TS_CMD_LSFD} -p "${PID}" -n -o TIMERFD.REMAINING -Q "${EXPR}"
	    echo 'TIMERFD.REMAINING': $?

	    ${TS_CMD_LSFD} -p "${PID}" -n -o TIMERFD.INTERVAL -Q "${EXPR}"
	    echo 'TIMERFD.INTERVAL': $?

	    echo DONE >&"${MKFDS[1]}"
	fi
	wait "${MKFDS_PID}"
    done
} > "$TS_OUTPUT" 2>&1

ts_finalize
